<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="dw__uart_8c" kind="file">
    <compoundname>dw_uart.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="embARC__toolchain_8h" local="yes">embARC_toolchain.h</includes>
    <includes refid="embARC__error_8h" local="yes">embARC_error.h</includes>
    <includes refid="arc__exception_8h" local="yes">arc/arc_exception.h</includes>
    <includes refid="dw__uart__hal_8h" local="yes">device/designware/dw_uart_hal.h</includes>
    <includes refid="dw__uart_8h" local="yes">device/designware/dw_uart.h</includes>
    <incdepgraph>
      <node id="3119">
        <label>stdbool.h</label>
      </node>
      <node id="3115">
        <label>embARC_toolchain.h</label>
        <link refid="embARC__toolchain_8h"/>
        <childnode refid="3116" relation="include">
        </childnode>
        <childnode refid="3117" relation="include">
        </childnode>
        <childnode refid="3118" relation="include">
        </childnode>
        <childnode refid="3119" relation="include">
        </childnode>
      </node>
      <node id="3116">
        <label>stdint.h</label>
      </node>
      <node id="3120">
        <label>embARC_error.h</label>
        <link refid="embARC__error_8h"/>
        <childnode refid="3116" relation="include">
        </childnode>
        <childnode refid="3121" relation="include">
        </childnode>
      </node>
      <node id="3118">
        <label>stddef.h</label>
      </node>
      <node id="3122">
        <label>arc/arc.h</label>
        <link refid="arc_8h"/>
        <childnode refid="3123" relation="include">
        </childnode>
      </node>
      <node id="3117">
        <label>limits.h</label>
      </node>
      <node id="3123">
        <label>arc/arc_feature_config.h</label>
        <link refid="arc__feature__config_8h"/>
      </node>
      <node id="3127">
        <label>device/ip_hal/dev_uart.h</label>
        <link refid="dev__uart_8h"/>
        <childnode refid="3128" relation="include">
        </childnode>
      </node>
      <node id="3114">
        <label>string.h</label>
      </node>
      <node id="3128">
        <label>device/dev_common.h</label>
        <link refid="dev__common_8h"/>
        <childnode refid="3115" relation="include">
        </childnode>
      </node>
      <node id="3126">
        <label>device/designware/dw_uart.h</label>
        <link refid="dw__uart_8h"/>
        <childnode refid="3127" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
      </node>
      <node id="3124">
        <label>arc/arc_exception.h</label>
        <link refid="arc__exception_8h"/>
        <childnode refid="3121" relation="include">
        </childnode>
      </node>
      <node id="3121">
        <label>arc/arc_builtin.h</label>
        <link refid="arc__builtin_8h"/>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3122" relation="include">
        </childnode>
      </node>
      <node id="3125">
        <label>device/designware/dw_uart_hal.h</label>
        <link refid="dw__uart__hal_8h"/>
      </node>
      <node id="3113">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c</label>
        <link refid="dw_uart.c"/>
        <childnode refid="3114" relation="include">
        </childnode>
        <childnode refid="3115" relation="include">
        </childnode>
        <childnode refid="3120" relation="include">
        </childnode>
        <childnode refid="3124" relation="include">
        </childnode>
        <childnode refid="3125" relation="include">
        </childnode>
        <childnode refid="3126" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" prot="public" static="no">
        <name>DW_UART_CHECK_EXP</name>
        <param><defname>EXPR</defname></param>
        <param><defname>ERROR_CODE</defname></param>
        <initializer><ref refid="group__EMBARC__ERROR_ga8bd781723e5f3f1a4cbf2b785e92c71c_1ga8bd781723e5f3f1a4cbf2b785e92c71c" kindref="member">CHECK_EXP</ref>(EXPR, ercd, ERROR_CODE, error_exit)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DesignWare UART driver macros used in uart drivercheck expressions used in DesignWare UART driver implementation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="45" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8c_a1de405431d52cf3d7375d77bcedb323a_1a1de405431d52cf3d7375d77bcedb323a" prot="public" static="no">
        <name>VALID_CHK_UART_INFO_OBJECT</name>
        <param><defname>uartinfo_obj_ptr</defname></param>
        <initializer>{			   \
		<ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>((uartinfo_obj_ptr) != NULL, <ref refid="group__EMBARC__ERROR_ga33dcdca4c2e85d1b2899272d9d176553_1ga33dcdca4c2e85d1b2899272d9d176553" kindref="member">E_OBJ</ref>);		   \
		<ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(((uartinfo_obj_ptr)-&gt;uart_ctrl) != NULL, <ref refid="group__EMBARC__ERROR_ga33dcdca4c2e85d1b2899272d9d176553_1ga33dcdca4c2e85d1b2899272d9d176553" kindref="member">E_OBJ</ref>); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>valid check of uart info object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="49" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8c_aee6cb6cbccff7ec5bd4567fdc9153762_1aee6cb6cbccff7ec5bd4567fdc9153762" prot="public" static="no">
        <name>DW_UART_BAUD2DIV</name>
        <param><defname>perifreq</defname></param>
        <param><defname>baud</defname></param>
        <initializer>((perifreq) / ((baud) * 16))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>convert DesignWare baudrate to divisor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="56" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8c_ac95bdbdc9b968146b56e2799bed84a09_1ac95bdbdc9b968146b56e2799bed84a09" prot="public" static="no">
        <name>DW_UART_RDY_SND</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DesignWare UART interrupt callback routines select macros definitionsready to send callback </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="61" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8c_ad06558b8493c1463445b785e398694aa_1ad06558b8493c1463445b785e398694aa" prot="public" static="no">
        <name>DW_UART_RDY_RCV</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ready to receive callback </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="62" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group__DEVICE__DW__UART__STATIC_gacde67c4589b7545d916585f051bc2cdf_1gacde67c4589b7545d916585f051bc2cdf" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t dw_uart_databits[]</definition>
        <argsstring>[]</argsstring>
        <name>dw_uart_databits</name>
        <initializer>= {		      
	<ref refid="dw__uart__hal_8h_a85c5919c361c5cb9a488020967fe07a9_1a85c5919c361c5cb9a488020967fe07a9" kindref="member">DW_UART_LCR_WORD_LEN5</ref>, <ref refid="dw__uart__hal_8h_a2d99211e3ab859fe4c08b583c52d5705_1a2d99211e3ab859fe4c08b583c52d5705" kindref="member">DW_UART_LCR_WORD_LEN6</ref>, 
	<ref refid="dw__uart__hal_8h_a072b7d1c17fda024745cd8ea6872b1c2_1a072b7d1c17fda024745cd8ea6872b1c2" kindref="member">DW_UART_LCR_WORD_LEN7</ref>, <ref refid="dw__uart__hal_8h_a5a6cfacdd9cf0f2cfa95496d7dbcf25d_1a5a6cfacdd9cf0f2cfa95496d7dbcf25d" kindref="member">DW_UART_LCR_WORD_LEN8</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="71" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__DW__UART__STATIC_ga556033b93cfcc60100dc0fe792b84bf4_1ga556033b93cfcc60100dc0fe792b84bf4" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t dw_uart_parity[]</definition>
        <argsstring>[]</argsstring>
        <name>dw_uart_parity</name>
        <initializer>= {
	<ref refid="dw__uart__hal_8h_ab56fa38d1e9dbd810ee23433722cfe02_1ab56fa38d1e9dbd810ee23433722cfe02" kindref="member">DW_UART_LCR_PARITY_NONE</ref>, <ref refid="dw__uart__hal_8h_a9e39ac1683bdf23f8aa9bb5fa36ae2a7_1a9e39ac1683bdf23f8aa9bb5fa36ae2a7" kindref="member">DW_UART_LCR_PARITY_ODD</ref>,
	<ref refid="dw__uart__hal_8h_a349b0fa4b89500d8c9c2a9ca3ddff368_1a349b0fa4b89500d8c9c2a9ca3ddff368" kindref="member">DW_UART_LCR_PARITY_EVEN</ref>, <ref refid="dw__uart__hal_8h_a235dccbc3c9ab9ead3eaa94b94aafd4b_1a235dccbc3c9ab9ead3eaa94b94aafd4b" kindref="member">DW_UART_LCR_PARITY_MASK</ref>,
	<ref refid="dw__uart__hal_8h_a0af71701dad61a2736dd154807542ced_1a0af71701dad61a2736dd154807542ced" kindref="member">DW_UART_LCR_PARITY_SPACE</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="75" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__DW__UART__STATIC_gaa85824a21e026ecebca6cd01f36a59a3_1gaa85824a21e026ecebca6cd01f36a59a3" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t dw_uart_stopbits[]</definition>
        <argsstring>[]</argsstring>
        <name>dw_uart_stopbits</name>
        <initializer>= {
	<ref refid="dw__uart__hal_8h_ac8af6809d02f69c738786e2056dfd96a_1ac8af6809d02f69c738786e2056dfd96a" kindref="member">DW_UART_LCR_1_STOP_BIT</ref>, <ref refid="dw__uart__hal_8h_a4c44b27c9a1aeb87004836c2b314d30e_1a4c44b27c9a1aeb87004836c2b314d30e" kindref="member">DW_UART_LCR_1D5_STOP_BIT</ref>,
	<ref refid="dw__uart__hal_8h_a1278fe4f2cf57fd541bfe51d0396d606_1a1278fe4f2cf57fd541bfe51d0396d606" kindref="member">DW_UART_LCR_2_STOP_BIT</ref>
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="80" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga5e9dba55767cdfd596f0d6fbe50d6abd_1ga5e9dba55767cdfd596f0d6fbe50d6abd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> int32_t</type>
        <definition>int32_t dw_uart_putready</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_putready</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>Test whether uart is ready to send, 1 ready, 0 not ready. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="89" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga95b7911597cd9d386ed99f6ff5a437ff_1ga95b7911597cd9d386ed99f6ff5a437ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> int32_t</type>
        <definition>int32_t dw_uart_getready</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_getready</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>Test whether uart is ready to receive, 1 ready, 0 not ready. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="102" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="102" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gac4344753a1f1cf3f87540d466620ddcf_1gac4344753a1f1cf3f87540d466620ddcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> void</type>
        <definition>void dw_uart_putchar</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, char chr)</argsstring>
        <name>dw_uart_putchar</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
<para>Write char to uart send fifo. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="115" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga2913d268fd216616d9505d298c71cc04_1ga2913d268fd216616d9505d298c71cc04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> int32_t</type>
        <definition>int32_t dw_uart_getchar</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_getchar</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>Read data from uart receive fifo, return data received. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="124" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gac26364738ccf1f597263134b1dfe2745_1gac26364738ccf1f597263134b1dfe2745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> int32_t</type>
        <definition>int32_t dw_uart_snd_chr</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, char chr)</argsstring>
        <name>dw_uart_snd_chr</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
<para>Send char through designware uart when available, mostly used in interrupt method, non-blocked function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart register structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chr</parametername>
</parameternamelist>
<parameterdescription>
<para>char to sent </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Send successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not ready to send data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="137" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="137" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gabd19876c103c437f1968c06b709bc3b8_1gabd19876c103c437f1968c06b709bc3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> int32_t</type>
        <definition>int32_t dw_uart_rcv_chr</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_rcv_chr</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>Receive one char through designware uart, mostly used in interrupt routine, non-blocked function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart register structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Data received </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="152" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga9a633aef423657a3b131e2273d01733d_1ga9a633aef423657a3b131e2273d01733d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> void</type>
        <definition>void dw_uart_psnd_chr</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, char chr)</argsstring>
        <name>dw_uart_psnd_chr</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
<para>Send char through designware uart in poll method, blocked function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart register structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chr</parametername>
</parameternamelist>
<parameterdescription>
<para>Char to sent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>wait until uart is ready to send</para><para>send char </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="162" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="162" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga7eef85dc8a52cea140f647e4ab027e71_1ga7eef85dc8a52cea140f647e4ab027e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> int32_t</type>
        <definition>int32_t dw_uart_prcv_chr</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_prcv_chr</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>Receive one char through designware uart in poll method, blocked function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart register structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Data received </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>wait until uart is ready to receive</para><para>receive data </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="177" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="177" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gaacbe47fcc6fd08b7b9aaa0581fd11b8e_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t dw_uart_set_dps</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, UART_DPS_FORMAT *dps)</argsstring>
        <name>dw_uart_set_dps</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type><ref refid="structUART__DPS__FORMAT" kindref="compound">UART_DPS_FORMAT</ref> *</type>
          <declname>dps</declname>
        </param>
        <briefdescription>
<para>Set designware uart DPS value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart register structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dps</parametername>
</parameternamelist>
<parameterdescription>
<para>Data bits/parity bit/stop bits parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Set ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>Set failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="194" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="194" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga80f4fd4e33a6e7758998c8562290a76e_1ga80f4fd4e33a6e7758998c8562290a76e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_set_baud</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, uint32_t baud_divisor)</argsstring>
        <name>dw_uart_set_baud</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baud_divisor</declname>
        </param>
        <briefdescription>
<para>Set designware uart baudrate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart register structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baud_divisor</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart baudrate divisor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>setting uart baudrate registers</para><para>&lt; DLL</para><para>&lt; DLH</para><para>disable DLAB </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="228" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="228" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gaadfe5d51541bc2fb962107355c8231bd_1gaadfe5d51541bc2fb962107355c8231bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> void</type>
        <definition>void dw_uart_software_reset</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_software_reset</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>Do uart software reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart register structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="246" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="246" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gab528eba58066212798ba5fcedfbfa6de_1gab528eba58066212798ba5fcedfbfa6de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_set_hwfc</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, UART_HW_FLOW_CONTROL hwfc)</argsstring>
        <name>dw_uart_set_hwfc</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref></type>
          <declname>hwfc</declname>
        </param>
        <briefdescription>
<para>Set designware uart baudrate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart register structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hwfc</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart hardware flow control type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Need to set corresponding pin functions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="260" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="260" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga75dc17b8200d755deb873719f450f591_1ga75dc17b8200d755deb873719f450f591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> void</type>
        <definition>Inline void dw_uart_set_break</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_set_break</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="276" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gaaf4185afdab471643293981fab2021a9_1gaaf4185afdab471643293981fab2021a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref> void</type>
        <definition>void dw_uart_clr_break</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_clr_break</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="284" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="284" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga2e6916f0af485cf8578374b0c6cb95eb_1ga2e6916f0af485cf8578374b0c6cb95eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_init</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, uint32_t baud_divisor, UART_DPS_FORMAT *dps, UART_HW_FLOW_CONTROL hwfc)</argsstring>
        <name>dw_uart_init</name>
        <param>
          <type><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baud_divisor</declname>
        </param>
        <param>
          <type><ref refid="structUART__DPS__FORMAT" kindref="compound">UART_DPS_FORMAT</ref> *</type>
          <declname>dps</declname>
        </param>
        <param>
          <type><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref></type>
          <declname>hwfc</declname>
        </param>
        <briefdescription>
<para>Initialise designware uart with selected baud rate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart register structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baud_divisor</parametername>
</parameternamelist>
<parameterdescription>
<para>Baud rate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dps</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart databits/parity/stopbits </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">hwfc</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart flow control method </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>enable uart fifo (FCR IIR is the same)</para><para>disable all uart interrupt </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="296" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="296" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga296ed0af981331eed09ff311cf9b17e6_1ga296ed0af981331eed09ff311cf9b17e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_flush_output</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr)</argsstring>
        <name>dw_uart_flush_output</name>
        <param>
          <type><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <briefdescription>
<para>Set designware uart baud rate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_info_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart information structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="312" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="312" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_dis_cbr</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr, uint32_t cbrtn)</argsstring>
        <name>dw_uart_dis_cbr</name>
        <param>
          <type><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cbrtn</declname>
        </param>
        <briefdescription>
<para>Disable designware uart send or receive interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_info_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart information structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbrtn</parametername>
</parameternamelist>
<parameterdescription>
<para>Control code of callback routine </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; ready to send callback</para><para>&lt; ready to receive callback </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="346" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="346" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga34b6916c9c6d6336d813a95986d6beac_1ga34b6916c9c6d6336d813a95986d6beac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_ena_cbr</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr, uint32_t cbrtn)</argsstring>
        <name>dw_uart_ena_cbr</name>
        <param>
          <type><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cbrtn</declname>
        </param>
        <briefdescription>
<para>Enable DesignWare UART send or receive interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_info_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart information structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbrtn</parametername>
</parameternamelist>
<parameterdescription>
<para>Control code of callback routine </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt; ready to send callback</para><para>&lt; ready to receive callback </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="378" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="378" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gab989ee3c9df5d9163650670273df8283_1gab989ee3c9df5d9163650670273df8283" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_disable_interrupt</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr)</argsstring>
        <name>dw_uart_disable_interrupt</name>
        <param>
          <type><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <briefdescription>
<para>Disable designware uart interrupt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_info_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart information structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>disable uart send&amp;receive interrupt after disable uart interrupt</para><para>&lt; ready to send callback</para><para>&lt; ready to receive callback </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="409" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="409" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gac84e8d6126193d255334f825885681ae_1gac84e8d6126193d255334f825885681ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_enable_device</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr)</argsstring>
        <name>dw_uart_enable_device</name>
        <param>
          <type><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>enable designware uart </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="424" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="424" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga6dd5da5a303245d2c1a95564d8cbe980_1ga6dd5da5a303245d2c1a95564d8cbe980" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_disable_device</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr)</argsstring>
        <name>dw_uart_disable_device</name>
        <param>
          <type><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>disable designware uart </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="436" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="436" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga74b2995571a4daecb84808b56a12e3e0_1ga74b2995571a4daecb84808b56a12e3e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_abort_tx</definition>
        <argsstring>(DEV_UART *uart_obj)</argsstring>
        <name>dw_uart_abort_tx</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>abort current interrupt transmit transfer </para>        </detaileddescription>
        <inbodydescription>
<para>&lt; ready to send callback </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="448" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="448" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_ga17cb2aa3d8fa1de710018838f34b2da6_1ga17cb2aa3d8fa1de710018838f34b2da6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_abort_rx</definition>
        <argsstring>(DEV_UART *uart_obj)</argsstring>
        <name>dw_uart_abort_rx</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>abort current interrupt receive transfer </para>        </detaileddescription>
        <inbodydescription>
<para>&lt; ready to receive callback </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="464" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="464" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gad3d9c1f9d9820d9358be93c1dbc95fe6_1gad3d9c1f9d9820d9358be93c1dbc95fe6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t dw_uart_get_txavail</definition>
        <argsstring>(DW_UART_CTRL *uart_ctrl_ptr)</argsstring>
        <name>dw_uart_get_txavail</name>
        <param>
          <type><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref> *</type>
          <declname>uart_ctrl_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get available transmit fifo count </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="480" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="480" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="group__DEVICE__DW__UART__STATIC_gaac62cb6213fa0e985e4da95ef4270aa2_1gaac62cb6213fa0e985e4da95ef4270aa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t dw_uart_get_rxavail</definition>
        <argsstring>(DW_UART_CTRL *uart_ctrl_ptr)</argsstring>
        <name>dw_uart_get_rxavail</name>
        <param>
          <type><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref> *</type>
          <declname>uart_ctrl_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get available receive fifo count </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="498" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="498" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_a49c3f35887ad36260c0576c58614db71_1a49c3f35887ad36260c0576c58614db71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_open</definition>
        <argsstring>(DEV_UART *uart_obj, uint32_t baud)</argsstring>
        <name>dw_uart_open</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baud</declname>
        </param>
        <briefdescription>
<para>Open a designware uart device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baud</parametername>
</parameternamelist>
<parameterdescription>
<para>Baud rate </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>If device was opened before with different baudrate, then return E_OPNED </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Open settings are not supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>init uart</para><para>uart interrupt related init</para><para>install uart interrupt into system </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="527" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="527" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_a40287dfa053b6bc49bcaf66c35d73b1c_1a40287dfa053b6bc49bcaf66c35d73b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_close</definition>
        <argsstring>(DEV_UART *uart_obj)</argsstring>
        <name>dw_uart_close</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <briefdescription>
<para>Close a DesignWare UART device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still opened, the device opn_cnt decreased by 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="596" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="596" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_aad6c59b900e3f9b72b1eac4ca889f317_1aad6c59b900e3f9b72b1eac4ca889f317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_control</definition>
        <argsstring>(DEV_UART *uart_obj, uint32_t ctrl_cmd, void *param)</argsstring>
        <name>dw_uart_control</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ctrl_cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Control uart by ctrl command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DEVICE__HAL__UART__CTRLCMD" kindref="compound">control command</ref>, to change or get some thing related to uart </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters used to control uart or return something </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CLSED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is not opened </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_DIS</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is disabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to hardware issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to different reasons like in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Control command is not supported or not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>to receive unsigned int value</para><para>When device is disabled, only UART_CMD_ENA_DEV, UART_CMD_DIS_DEV, UART_CMD_GET_STATUS are available, other commands will return E_SYS</para><para>&lt; ready to send callback</para><para>&lt; ready to send callback</para><para>&lt; ready to receive callback</para><para>&lt; ready to receive callback </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="640" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="640" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_a66f55a5d83c8d575ff0c2add94e6ec51_1a66f55a5d83c8d575ff0c2add94e6ec51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_write</definition>
        <argsstring>(DEV_UART *uart_obj, const void *data, uint32_t len)</argsstring>
        <name>dw_uart_write</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Send data through DesignWare UART. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to send (data must be char type) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Data length to send </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0 Byte count that was successfully sent for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t write data to hardware due to hardware issues </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="801" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="801" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_a9f48bb55260aea46433c78bfd0935c69_1a9f48bb55260aea46433c78bfd0935c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_read</definition>
        <argsstring>(DEV_UART *uart_obj, void *data, uint32_t len)</argsstring>
        <name>dw_uart_read</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Read data through DesignWare UART. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data that need to read (data must be char type) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Data count to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0 Byte count that was successfully sent for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t receive data from hardware due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="839" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="839" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_a931f15b8f8a5a29ab3a7344aa3cb10d2_1a931f15b8f8a5a29ab3a7344aa3cb10d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dw_uart_isr</definition>
        <argsstring>(DEV_UART *uart_obj, void *ptr)</argsstring>
        <name>dw_uart_isr</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>DesignWare UART interrupt processing routine. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Extra information </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>uart interrupt status</para><para>read error status to clear interrupt</para><para>get uart interrupt status</para><para>&lt; ready to send callback</para><para>&lt; ready to receive callback </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" line="872" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="872" bodyend="958"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>Synopsys,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>3)<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Synopsys,<sp/>Inc.,<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>---------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embARC__toolchain_8h" kindref="compound">embARC_toolchain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embARC__error_8h" kindref="compound">embARC_error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arc__exception_8h" kindref="compound">arc/arc_exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dw__uart__hal_8h" kindref="compound">device/designware/dw_uart_hal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dw__uart_8h" kindref="compound">device/designware/dw_uart.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor">#define<sp/>DW_UART_CHECK_EXP(EXPR,<sp/>ERROR_CODE)<sp/><sp/><sp/><sp/><sp/>CHECK_EXP(EXPR,<sp/>ercd,<sp/>ERROR_CODE,<sp/>error_exit)</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DISABLE_DEVICE_OBJECT_VALID_CHECK</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor">#define<sp/>VALID_CHK_UART_INFO_OBJECT(uartinfo_obj_ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_CHECK_EXP((uartinfo_obj_ptr)<sp/>!=<sp/>NULL,<sp/>E_OBJ);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_CHECK_EXP(((uartinfo_obj_ptr)-&gt;uart_ctrl)<sp/>!=<sp/>NULL,<sp/>E_OBJ);<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">}</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor">#define<sp/>DW_UART_BAUD2DIV(perifreq,<sp/>baud)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((perifreq)<sp/>/<sp/>((baud)<sp/>*<sp/>16))</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor">#define<sp/>DW_UART_RDY_SND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1U)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor">#define<sp/>DW_UART_RDY_RCV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2U)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor">const<sp/>uint8_t<sp/>dw_uart_databits[]<sp/>=<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DW_UART_LCR_WORD_LEN5,<sp/>DW_UART_LCR_WORD_LEN6,<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>DW_UART_LCR_WORD_LEN7,<sp/>DW_UART_LCR_WORD_LEN8</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"></highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga556033b93cfcc60100dc0fe792b84bf4_1ga556033b93cfcc60100dc0fe792b84bf4" kindref="member">dw_uart_parity</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart__hal_8h_ab56fa38d1e9dbd810ee23433722cfe02_1ab56fa38d1e9dbd810ee23433722cfe02" kindref="member">DW_UART_LCR_PARITY_NONE</ref>,<sp/><ref refid="dw__uart__hal_8h_a9e39ac1683bdf23f8aa9bb5fa36ae2a7_1a9e39ac1683bdf23f8aa9bb5fa36ae2a7" kindref="member">DW_UART_LCR_PARITY_ODD</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart__hal_8h_a349b0fa4b89500d8c9c2a9ca3ddff368_1a349b0fa4b89500d8c9c2a9ca3ddff368" kindref="member">DW_UART_LCR_PARITY_EVEN</ref>,<sp/><ref refid="dw__uart__hal_8h_a235dccbc3c9ab9ead3eaa94b94aafd4b_1a235dccbc3c9ab9ead3eaa94b94aafd4b" kindref="member">DW_UART_LCR_PARITY_MASK</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart__hal_8h_a0af71701dad61a2736dd154807542ced_1a0af71701dad61a2736dd154807542ced" kindref="member">DW_UART_LCR_PARITY_SPACE</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_gaa85824a21e026ecebca6cd01f36a59a3_1gaa85824a21e026ecebca6cd01f36a59a3" kindref="member">dw_uart_stopbits</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart__hal_8h_ac8af6809d02f69c738786e2056dfd96a_1ac8af6809d02f69c738786e2056dfd96a" kindref="member">DW_UART_LCR_1_STOP_BIT</ref>,<sp/><ref refid="dw__uart__hal_8h_a4c44b27c9a1aeb87004836c2b314d30e_1a4c44b27c9a1aeb87004836c2b314d30e" kindref="member">DW_UART_LCR_1D5_STOP_BIT</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart__hal_8h_a1278fe4f2cf57fd541bfe51d0396d606_1a1278fe4f2cf57fd541bfe51d0396d606" kindref="member">DW_UART_LCR_2_STOP_BIT</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/>int32_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga5e9dba55767cdfd596f0d6fbe50d6abd_1ga5e9dba55767cdfd596f0d6fbe50d6abd" kindref="member">dw_uart_putready</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a9fb6547c256c3206d3d343c09061ecd0_1a9fb6547c256c3206d3d343c09061ecd0" kindref="member">CPR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a58c1816ce49b2ede728368875784e665_1a58c1816ce49b2ede728368875784e665" kindref="member">DW_UART_CPR_FIFO_STAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a0927fb033fd8d27780e817eae6b2f1a3_1a0927fb033fd8d27780e817eae6b2f1a3" kindref="member">USR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_ac50fed048ad56c1e336b70c78ac87fb6_1ac50fed048ad56c1e336b70c78ac87fb6" kindref="member">DW_UART_USR_TFNF</ref>)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a6444283340d62a1397a209a473a83efa_1a6444283340d62a1397a209a473a83efa" kindref="member">LSR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_af4fd94c9ec469ed7c0b8c87794b0fd27_1af4fd94c9ec469ed7c0b8c87794b0fd27" kindref="member">DW_UART_LSR_TXD_EMPTY</ref>)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/>int32_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga95b7911597cd9d386ed99f6ff5a437ff_1ga95b7911597cd9d386ed99f6ff5a437ff" kindref="member">dw_uart_getready</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a9fb6547c256c3206d3d343c09061ecd0_1a9fb6547c256c3206d3d343c09061ecd0" kindref="member">CPR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a58c1816ce49b2ede728368875784e665_1a58c1816ce49b2ede728368875784e665" kindref="member">DW_UART_CPR_FIFO_STAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a0927fb033fd8d27780e817eae6b2f1a3_1a0927fb033fd8d27780e817eae6b2f1a3" kindref="member">USR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a6d4eeb37fd4aec3a9f16ff1081e9ce73_1a6d4eeb37fd4aec3a9f16ff1081e9ce73" kindref="member">DW_UART_USR_RFNE</ref>)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a6444283340d62a1397a209a473a83efa_1a6444283340d62a1397a209a473a83efa" kindref="member">LSR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_ab2f0f76a49b2bd75248369f3283e4d55_1ab2f0f76a49b2bd75248369f3283e4d55" kindref="member">DW_UART_LSR_DR</ref>)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gac4344753a1f1cf3f87540d466620ddcf_1gac4344753a1f1cf3f87540d466620ddcf" kindref="member">dw_uart_putchar</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_abaf92af860d2aa518ca8a3dbce2c038c_1abaf92af860d2aa518ca8a3dbce2c038c" kindref="member">DATA</ref><sp/>=<sp/>chr;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/>int32_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga2913d268fd216616d9505d298c71cc04_1ga2913d268fd216616d9505d298c71cc04" kindref="member">dw_uart_getchar</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_abaf92af860d2aa518ca8a3dbce2c038c_1abaf92af860d2aa518ca8a3dbce2c038c" kindref="member">DATA</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/>int32_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_gac26364738ccf1f597263134b1dfe2745_1gac26364738ccf1f597263134b1dfe2745" kindref="member">dw_uart_snd_chr</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DEVICE__DW__UART__STATIC_ga5e9dba55767cdfd596f0d6fbe50d6abd_1ga5e9dba55767cdfd596f0d6fbe50d6abd" kindref="member">dw_uart_putready</ref>(uart_reg_ptr))<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gac4344753a1f1cf3f87540d466620ddcf_1gac4344753a1f1cf3f87540d466620ddcf" kindref="member">dw_uart_putchar</ref>(uart_reg_ptr,<sp/>chr);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__EMBARC__ERROR_ga33dcdca4c2e85d1b2899272d9d176553_1ga33dcdca4c2e85d1b2899272d9d176553" kindref="member">E_OBJ</ref>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/>int32_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_gabd19876c103c437f1968c06b709bc3b8_1gabd19876c103c437f1968c06b709bc3b8" kindref="member">dw_uart_rcv_chr</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga2913d268fd216616d9505d298c71cc04_1ga2913d268fd216616d9505d298c71cc04" kindref="member">dw_uart_getchar</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga9a633aef423657a3b131e2273d01733d_1ga9a633aef423657a3b131e2273d01733d" kindref="member">dw_uart_psnd_chr</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__DEVICE__DW__UART__STATIC_ga5e9dba55767cdfd596f0d6fbe50d6abd_1ga5e9dba55767cdfd596f0d6fbe50d6abd" kindref="member">dw_uart_putready</ref>(uart_reg_ptr))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gac4344753a1f1cf3f87540d466620ddcf_1gac4344753a1f1cf3f87540d466620ddcf" kindref="member">dw_uart_putchar</ref>(uart_reg_ptr,<sp/>chr);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/>int32_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga7eef85dc8a52cea140f647e4ab027e71_1ga7eef85dc8a52cea140f647e4ab027e71" kindref="member">dw_uart_prcv_chr</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group__DEVICE__DW__UART__STATIC_ga95b7911597cd9d386ed99f6ff5a437ff_1ga95b7911597cd9d386ed99f6ff5a437ff" kindref="member">dw_uart_getready</ref>(uart_reg_ptr))<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>blocked<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga2913d268fd216616d9505d298c71cc04_1ga2913d268fd216616d9505d298c71cc04" kindref="member">dw_uart_getchar</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_gaacbe47fcc6fd08b7b9aaa0581fd11b8e_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" kindref="member">dw_uart_set_dps</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/><ref refid="structUART__DPS__FORMAT" kindref="compound">UART_DPS_FORMAT</ref><sp/>*dps)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>dps_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>bits<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dps-&gt;<ref refid="structUART__DPS__FORMAT_a905bbfcf110ccbcd667b19fb4d244579_1a905bbfcf110ccbcd667b19fb4d244579" kindref="member">databits</ref><sp/>&lt;<sp/>5)<sp/>||<sp/>(dps-&gt;<ref refid="structUART__DPS__FORMAT_a905bbfcf110ccbcd667b19fb4d244579_1a905bbfcf110ccbcd667b19fb4d244579" kindref="member">databits</ref><sp/>&gt;<sp/>8))<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>bits<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dps-&gt;<ref refid="structUART__DPS__FORMAT_a5eac485895e67b08cd1ce9ba901284bb_1a5eac485895e67b08cd1ce9ba901284bb" kindref="member">stopbits</ref><sp/>&gt;<sp/><ref refid="group__DEVICE__HAL__UART__FORMAT_gacbd51ac613ec824eeb73a5b6bf743ca6_1ggacbd51ac613ec824eeb73a5b6bf743ca6a8408cb794ac8f8e4003fb9e99b4e3b7d" kindref="member">UART_STPBITS_TWO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parity<sp/>bit<sp/>type<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dps-&gt;<ref refid="structUART__DPS__FORMAT_a23a246156b82c3bf094cfcdf59a7b013_1a23a246156b82c3bf094cfcdf59a7b013" kindref="member">parity</ref><sp/>&gt;<sp/><ref refid="group__DEVICE__HAL__UART__FORMAT_ga24fd4dba815fc40fbd8e8c37dbf87c7a_1gga24fd4dba815fc40fbd8e8c37dbf87c7aa9866e632545cc7de127aee8071528030" kindref="member">UART_PARITY_SPACE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>dps_value<sp/>|=<sp/>(uint32_t)<ref refid="group__DEVICE__DW__UART__STATIC_gacde67c4589b7545d916585f051bc2cdf_1gacde67c4589b7545d916585f051bc2cdf" kindref="member">dw_uart_databits</ref>[dps-&gt;<ref refid="structUART__DPS__FORMAT_a905bbfcf110ccbcd667b19fb4d244579_1a905bbfcf110ccbcd667b19fb4d244579" kindref="member">databits</ref><sp/>-<sp/>5];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>dps_value<sp/>|=<sp/>(uint32_t)<ref refid="group__DEVICE__DW__UART__STATIC_gaa85824a21e026ecebca6cd01f36a59a3_1gaa85824a21e026ecebca6cd01f36a59a3" kindref="member">dw_uart_stopbits</ref>[dps-&gt;<ref refid="structUART__DPS__FORMAT_a5eac485895e67b08cd1ce9ba901284bb_1a5eac485895e67b08cd1ce9ba901284bb" kindref="member">stopbits</ref>];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>dps_value<sp/>|=<sp/>(uint32_t)<ref refid="group__DEVICE__DW__UART__STATIC_ga556033b93cfcc60100dc0fe792b84bf4_1ga556033b93cfcc60100dc0fe792b84bf4" kindref="member">dw_uart_parity</ref>[dps-&gt;<ref refid="structUART__DPS__FORMAT_a23a246156b82c3bf094cfcdf59a7b013_1a23a246156b82c3bf094cfcdf59a7b013" kindref="member">parity</ref>];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>dps<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a1a7f793561bd7febe4851bde4a97a889_1a1a7f793561bd7febe4851bde4a97a889" kindref="member">LCR</ref><sp/>&amp;=<sp/>(~<ref refid="dw__uart__hal_8h_a7311940460e2935cb7e7fd4e36b090b8_1a7311940460e2935cb7e7fd4e36b090b8" kindref="member">DW_UART_LCR_DPS_MASK</ref>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>dps<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a1a7f793561bd7febe4851bde4a97a889_1a1a7f793561bd7febe4851bde4a97a889" kindref="member">LCR</ref><sp/>|=<sp/>dps_value;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga80f4fd4e33a6e7758998c8562290a76e_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/>uint32_t<sp/>baud_divisor)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>uart<sp/>baudrate<sp/>update<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a1a7f793561bd7febe4851bde4a97a889_1a1a7f793561bd7febe4851bde4a97a889" kindref="member">LCR</ref><sp/>|=<sp/><ref refid="dw__uart__hal_8h_a81ead9f9c4237d4827e5b9d809482cc2_1a81ead9f9c4237d4827e5b9d809482cc2" kindref="member">DW_UART_LCR_DLAB</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_abaf92af860d2aa518ca8a3dbce2c038c_1abaf92af860d2aa518ca8a3dbce2c038c" kindref="member">DATA</ref><sp/>=<sp/>baud_divisor<sp/>&amp;<sp/>0xff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a88ac74d7b15be384d32e7a496cd99f06_1a88ac74d7b15be384d32e7a496cd99f06" kindref="member">IER</ref><sp/>=<sp/>(baud_divisor<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff;<sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a1a7f793561bd7febe4851bde4a97a889_1a1a7f793561bd7febe4851bde4a97a889" kindref="member">LCR</ref><sp/>&amp;=<sp/>~(<ref refid="dw__uart__hal_8h_a81ead9f9c4237d4827e5b9d809482cc2_1a81ead9f9c4237d4827e5b9d809482cc2" kindref="member">DW_UART_LCR_DLAB</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gaadfe5d51541bc2fb962107355c8231bd_1gaadfe5d51541bc2fb962107355c8231bd" kindref="member">dw_uart_software_reset</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a454987264b031f560df01f40121bdfe2_1a454987264b031f560df01f40121bdfe2" kindref="member">SRR</ref><sp/>=<sp/><ref refid="dw__uart__hal_8h_a3f41fa65304f0053651d770deeab4037_1a3f41fa65304f0053651d770deeab4037" kindref="member">DW_UART_SRR_UR</ref><sp/>|<sp/><ref refid="dw__uart__hal_8h_a86b90ea0289e74a1c97e65779a01c383_1a86b90ea0289e74a1c97e65779a01c383" kindref="member">DW_UART_SRR_RFR</ref><sp/>|<sp/><ref refid="dw__uart__hal_8h_a3485adfce9f7a613e2f8f48483e73f9c_1a3485adfce9f7a613e2f8f48483e73f9c" kindref="member">DW_UART_SRR_XFR</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a0927fb033fd8d27780e817eae6b2f1a3_1a0927fb033fd8d27780e817eae6b2f1a3" kindref="member">USR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a6302904f1b9ef8ba7b6e932bcdb22702_1a6302904f1b9ef8ba7b6e932bcdb22702" kindref="member">DW_UART_USR_BUSY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>until<sp/>software<sp/>reset<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gab528eba58066212798ba5fcedfbfa6de_1gab528eba58066212798ba5fcedfbfa6de" kindref="member">dw_uart_set_hwfc</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref><sp/>hwfc)</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hwfc<sp/>==<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1ggaa79a1d08e403b54670b892c0c58d91d5a527864f0ec595151e7db5ef909fcf9f0" kindref="member">UART_FC_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_acdd06bacacbc2156e31b00e97f5c4b68_1acdd06bacacbc2156e31b00e97f5c4b68" kindref="member">MCR</ref><sp/>&amp;=<sp/>~(<ref refid="dw__uart__hal_8h_a0248f04d46b3fee74ebfc0681b794019_1a0248f04d46b3fee74ebfc0681b794019" kindref="member">DW_UART_MCR_AFCE</ref><sp/>|<sp/><ref refid="dw__uart__hal_8h_a7948581ea63c365831312b76a7dce878_1a7948581ea63c365831312b76a7dce878" kindref="member">DW_UART_MCR_RTS</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hwfc<sp/>==<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1ggaa79a1d08e403b54670b892c0c58d91d5afc75cc759e85ee277ead4520fb1d0b90" kindref="member">UART_FC_RTS</ref>)<sp/>||<sp/>(hwfc<sp/>==<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1ggaa79a1d08e403b54670b892c0c58d91d5a666090870593651febac7ad9db862760" kindref="member">UART_FC_BOTH</ref>))<sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_acdd06bacacbc2156e31b00e97f5c4b68_1acdd06bacacbc2156e31b00e97f5c4b68" kindref="member">MCR</ref><sp/>|=<sp/>(<ref refid="dw__uart__hal_8h_a0248f04d46b3fee74ebfc0681b794019_1a0248f04d46b3fee74ebfc0681b794019" kindref="member">DW_UART_MCR_AFCE</ref><sp/>|<sp/><ref refid="dw__uart__hal_8h_a7948581ea63c365831312b76a7dce878_1a7948581ea63c365831312b76a7dce878" kindref="member">DW_UART_MCR_RTS</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hwfc<sp/>==<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1ggaa79a1d08e403b54670b892c0c58d91d5a42eb1be010429695afe750de07e7ade6" kindref="member">UART_FC_CTS</ref>)<sp/>||<sp/>(hwfc<sp/>==<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1ggaa79a1d08e403b54670b892c0c58d91d5a666090870593651febac7ad9db862760" kindref="member">UART_FC_BOTH</ref>))<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_acdd06bacacbc2156e31b00e97f5c4b68_1acdd06bacacbc2156e31b00e97f5c4b68" kindref="member">MCR</ref><sp/>|=<sp/>(<ref refid="dw__uart__hal_8h_a0248f04d46b3fee74ebfc0681b794019_1a0248f04d46b3fee74ebfc0681b794019" kindref="member">DW_UART_MCR_AFCE</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga75dc17b8200d755deb873719f450f591_1ga75dc17b8200d755deb873719f450f591" kindref="member">dw_uart_set_break</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a1a7f793561bd7febe4851bde4a97a889_1a1a7f793561bd7febe4851bde4a97a889" kindref="member">LCR</ref><sp/>|=<sp/><ref refid="dw__uart__hal_8h_a3c47e5874e2f8e93a84c2d29de681a52_1a3c47e5874e2f8e93a84c2d29de681a52" kindref="member">DW_UART_LCR_BREAK</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><ref refid="group__TOOLCHAIN_ga66ac72ac51eb46131f009dfe028123e7_1ga66ac72ac51eb46131f009dfe028123e7" kindref="member">Inline</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gaaf4185afdab471643293981fab2021a9_1gaaf4185afdab471643293981fab2021a9" kindref="member">dw_uart_clr_break</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a1a7f793561bd7febe4851bde4a97a889_1a1a7f793561bd7febe4851bde4a97a889" kindref="member">LCR</ref><sp/>&amp;=<sp/>~<ref refid="dw__uart__hal_8h_a3c47e5874e2f8e93a84c2d29de681a52_1a3c47e5874e2f8e93a84c2d29de681a52" kindref="member">DW_UART_LCR_BREAK</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga2e6916f0af485cf8578374b0c6cb95eb_1ga2e6916f0af485cf8578374b0c6cb95eb" kindref="member">dw_uart_init</ref>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/>uint32_t<sp/>baud_divisor,<sp/><ref refid="structUART__DPS__FORMAT" kindref="compound">UART_DPS_FORMAT</ref><sp/>*dps,<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref><sp/>hwfc)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gaadfe5d51541bc2fb962107355c8231bd_1gaadfe5d51541bc2fb962107355c8231bd" kindref="member">dw_uart_software_reset</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gab528eba58066212798ba5fcedfbfa6de_1gab528eba58066212798ba5fcedfbfa6de" kindref="member">dw_uart_set_hwfc</ref>(uart_reg_ptr,<sp/>hwfc);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gaacbe47fcc6fd08b7b9aaa0581fd11b8e_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" kindref="member">dw_uart_set_dps</ref>(uart_reg_ptr,<sp/>dps);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga80f4fd4e33a6e7758998c8562290a76e_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(uart_reg_ptr,<sp/>baud_divisor);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_aa4ad6108d5b70892b6e862751488b421_1aa4ad6108d5b70892b6e862751488b421" kindref="member">IIR</ref><sp/>=<sp/>0x1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a88ac74d7b15be384d32e7a496cd99f06_1a88ac74d7b15be384d32e7a496cd99f06" kindref="member">IER</ref><sp/>=<sp/>0x0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga296ed0af981331eed09ff311cf9b17e6_1ga296ed0af981331eed09ff311cf9b17e6" kindref="member">dw_uart_flush_output</ref>(<ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr)</highlight></codeline>
<codeline lineno="313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_charbuf;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_a29925f487f183aba636d7372084ceae8_1a29925f487f183aba636d7372084ceae8" kindref="member">buf</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_a29925f487f183aba636d7372084ceae8_1a29925f487f183aba636d7372084ceae8" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref>;<sp/>i<sp/>&lt;<sp/>uart_info_ptr-&gt;tx_buf.len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga9a633aef423657a3b131e2273d01733d_1ga9a633aef423657a3b131e2273d01733d" kindref="member">dw_uart_psnd_chr</ref>(uart_reg_ptr,<sp/>p_charbuf[i]);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>transmit<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_a29925f487f183aba636d7372084ceae8_1a29925f487f183aba636d7372084ceae8" kindref="member">buf</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_ab8247876575c08659c01c8300f805619_1ab8247876575c08659c01c8300f805619" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a9fb6547c256c3206d3d343c09061ecd0_1a9fb6547c256c3206d3d343c09061ecd0" kindref="member">CPR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a58c1816ce49b2ede728368875784e665_1a58c1816ce49b2ede728368875784e665" kindref="member">DW_UART_CPR_FIFO_STAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>until<sp/>transmit<sp/>fifo<sp/>is<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a0927fb033fd8d27780e817eae6b2f1a3_1a0927fb033fd8d27780e817eae6b2f1a3" kindref="member">USR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a0fe55eb6a176d0ffc66073df871c220f_1a0fe55eb6a176d0ffc66073df871c220f" kindref="member">DW_UART_USR_TFE</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a0927fb033fd8d27780e817eae6b2f1a3_1a0927fb033fd8d27780e817eae6b2f1a3" kindref="member">USR</ref><sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a6302904f1b9ef8ba7b6e932bcdb22702_1a6302904f1b9ef8ba7b6e932bcdb22702" kindref="member">DW_UART_USR_BUSY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(<ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr,<sp/>uint32_t<sp/>cbrtn)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cbrtn)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_ac95bdbdc9b968146b56e2799bed84a09_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>:</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a88ac74d7b15be384d32e7a496cd99f06_1a88ac74d7b15be384d32e7a496cd99f06" kindref="member">IER</ref><sp/>&amp;=<sp/>~<ref refid="dw__uart__hal_8h_a3a42c76df2f84cf8ef1e66017d5f5910_1a3a42c76df2f84cf8ef1e66017d5f5910" kindref="member">DW_UART_IER_XMIT_EMPTY</ref>;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;=<sp/>~<ref refid="dw__uart_8h_ab16608b3249786f0e0c4282b66bbb64d_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_ad06558b8493c1463445b785e398694aa_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a88ac74d7b15be384d32e7a496cd99f06_1a88ac74d7b15be384d32e7a496cd99f06" kindref="member">IER</ref><sp/>&amp;=<sp/>~<ref refid="dw__uart__hal_8h_a3bc0f8a283eb00a0750a4f8ef5984e5e_1a3bc0f8a283eb00a0750a4f8ef5984e5e" kindref="member">DW_UART_IER_DATA_AVAIL</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;=<sp/>~<ref refid="dw__uart_8h_a1e495eaace4cbeb5a95407a074be5581_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;<sp/><ref refid="dw__uart_8h_ac7b6b350d796de899fa93483ca697695_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;<sp/>(<ref refid="dw__uart_8h_a1e495eaace4cbeb5a95407a074be5581_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref><sp/>|<sp/><ref refid="dw__uart_8h_ab16608b3249786f0e0c4282b66bbb64d_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>))<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" kindref="member">intno</ref><sp/>!=<sp/><ref refid="dw__uart_8h_a57c6c86833b7a3edd7309dc3563e639e_1a57c6c86833b7a3edd7309dc3563e639e" kindref="member">DW_UART_INVALID_INTNO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__EXCEPTION__CPU_gaa06cd81d78d066c1cdc46dde7dabeb57_1gaa06cd81d78d066c1cdc46dde7dabeb57" kindref="member">int_disable</ref>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" kindref="member">intno</ref>);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;=<sp/>~<ref refid="dw__uart_8h_ac7b6b350d796de899fa93483ca697695_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga34b6916c9c6d6336d813a95986d6beac_1ga34b6916c9c6d6336d813a95986d6beac" kindref="member">dw_uart_ena_cbr</ref>(<ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr,<sp/>uint32_t<sp/>cbrtn)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cbrtn)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_ac95bdbdc9b968146b56e2799bed84a09_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>|=<sp/><ref refid="dw__uart_8h_ab16608b3249786f0e0c4282b66bbb64d_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a88ac74d7b15be384d32e7a496cd99f06_1a88ac74d7b15be384d32e7a496cd99f06" kindref="member">IER</ref><sp/>|=<sp/><ref refid="dw__uart__hal_8h_a3a42c76df2f84cf8ef1e66017d5f5910_1a3a42c76df2f84cf8ef1e66017d5f5910" kindref="member">DW_UART_IER_XMIT_EMPTY</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_ad06558b8493c1463445b785e398694aa_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>|=<sp/><ref refid="dw__uart_8h_a1e495eaace4cbeb5a95407a074be5581_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a88ac74d7b15be384d32e7a496cd99f06_1a88ac74d7b15be384d32e7a496cd99f06" kindref="member">IER</ref><sp/>|=<sp/><ref refid="dw__uart__hal_8h_a3bc0f8a283eb00a0750a4f8ef5984e5e_1a3bc0f8a283eb00a0750a4f8ef5984e5e" kindref="member">DW_UART_IER_DATA_AVAIL</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;<sp/><ref refid="dw__uart_8h_ac7b6b350d796de899fa93483ca697695_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;<sp/>(<ref refid="dw__uart_8h_a1e495eaace4cbeb5a95407a074be5581_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref><sp/>|<sp/><ref refid="dw__uart_8h_ab16608b3249786f0e0c4282b66bbb64d_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>|=<sp/><ref refid="dw__uart_8h_ac7b6b350d796de899fa93483ca697695_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" kindref="member">intno</ref><sp/>!=<sp/><ref refid="dw__uart_8h_a57c6c86833b7a3edd7309dc3563e639e_1a57c6c86833b7a3edd7309dc3563e639e" kindref="member">DW_UART_INVALID_INTNO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__EXCEPTION__CPU_gab709d97aa7dcc618975fc7e8d5860c7f_1gab709d97aa7dcc618975fc7e8d5860c7f" kindref="member">int_enable</ref>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" kindref="member">intno</ref>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gab989ee3c9df5d9163650670273df8283_1gab989ee3c9df5d9163650670273df8283" kindref="member">dw_uart_disable_interrupt</ref>(<ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ac95bdbdc9b968146b56e2799bed84a09_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ad06558b8493c1463445b785e398694aa_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>uart<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" kindref="member">intno</ref><sp/>!=<sp/><ref refid="dw__uart_8h_a57c6c86833b7a3edd7309dc3563e639e_1a57c6c86833b7a3edd7309dc3563e639e" kindref="member">DW_UART_INVALID_INTNO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__EXCEPTION__CPU_gaa06cd81d78d066c1cdc46dde7dabeb57_1gaa06cd81d78d066c1cdc46dde7dabeb57" kindref="member">int_disable</ref>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" kindref="member">intno</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;=<sp/>~(<ref refid="dw__uart_8h_ac7b6b350d796de899fa93483ca697695_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref><sp/>|<sp/><ref refid="dw__uart_8h_ab16608b3249786f0e0c4282b66bbb64d_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref><sp/>|<sp/><ref refid="dw__uart_8h_a1e495eaace4cbeb5a95407a074be5581_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>);</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gac84e8d6126193d255334f825885681ae_1gac84e8d6126193d255334f825885681ae" kindref="member">dw_uart_enable_device</ref>(<ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_gaad1f383b0e8eb7feec60f52998730eff_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga80f4fd4e33a6e7758998c8562290a76e_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(uart_reg_ptr,<sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a715a194c21fdd3ca8b694c4656188bbf_1a715a194c21fdd3ca8b694c4656188bbf" kindref="member">baudrate</ref>);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>|=<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_gaad1f383b0e8eb7feec60f52998730eff_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga6dd5da5a303245d2c1a95564d8cbe980_1ga6dd5da5a303245d2c1a95564d8cbe980" kindref="member">dw_uart_disable_device</ref>(<ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_gaad1f383b0e8eb7feec60f52998730eff_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>)<sp/>==<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_gaad1f383b0e8eb7feec60f52998730eff_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga80f4fd4e33a6e7758998c8562290a76e_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(uart_reg_ptr,<sp/>0);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>&amp;=<sp/>~<ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_gaad1f383b0e8eb7feec60f52998730eff_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga74b2995571a4daecb84808b56a12e3e0_1ga74b2995571a4daecb84808b56a12e3e0" kindref="member">dw_uart_abort_tx</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structDEV__UART_ae4b6a665925b840b9c75ae93fd045d3f_1ae4b6a665925b840b9c75ae93fd045d3f" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;<sp/><ref refid="dw__uart_8h_ab16608b3249786f0e0c4282b66bbb64d_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ac95bdbdc9b968146b56e2799bed84a09_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>|=<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_ga80e3a2bfa3fca72a807e59da0bb3b2ee_1ga80e3a2bfa3fca72a807e59da0bb3b2ee" kindref="member">DEV_IN_TX_ABRT</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a80ccaca0d2d3826ae8a91d2e8fb6be76_1a80ccaca0d2d3826ae8a91d2e8fb6be76" kindref="member">tx_cb</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a80ccaca0d2d3826ae8a91d2e8fb6be76_1a80ccaca0d2d3826ae8a91d2e8fb6be76" kindref="member">tx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>&amp;=<sp/>~(<ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_ga80e3a2bfa3fca72a807e59da0bb3b2ee_1ga80e3a2bfa3fca72a807e59da0bb3b2ee" kindref="member">DEV_IN_TX_ABRT</ref>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga17cb2aa3d8fa1de710018838f34b2da6_1ga17cb2aa3d8fa1de710018838f34b2da6" kindref="member">dw_uart_abort_rx</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structDEV__UART_ae4b6a665925b840b9c75ae93fd045d3f_1ae4b6a665925b840b9c75ae93fd045d3f" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref><sp/>&amp;<sp/><ref refid="dw__uart_8h_a1e495eaace4cbeb5a95407a074be5581_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ad06558b8493c1463445b785e398694aa_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>|=<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_ga039071faab7f693aff3dc479800073fc_1ga039071faab7f693aff3dc479800073fc" kindref="member">DEV_IN_RX_ABRT</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_ade466313b1b02d6e011e12604510ef9e_1ade466313b1b02d6e011e12604510ef9e" kindref="member">rx_cb</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_ade466313b1b02d6e011e12604510ef9e_1ade466313b1b02d6e011e12604510ef9e" kindref="member">rx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>&amp;=<sp/>~(<ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_ga039071faab7f693aff3dc479800073fc_1ga039071faab7f693aff3dc479800073fc" kindref="member">DEV_IN_RX_ABRT</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_gad3d9c1f9d9820d9358be93c1dbc95fe6_1gad3d9c1f9d9820d9358be93c1dbc95fe6" kindref="member">dw_uart_get_txavail</ref>(<ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>tx_avail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7d62ad97196cb1fb028d919c3c9f3694_1a7d62ad97196cb1fb028d919c3c9f3694" kindref="member">tx_fifo_len</ref><sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DEVICE__DW__UART__STATIC_ga5e9dba55767cdfd596f0d6fbe50d6abd_1ga5e9dba55767cdfd596f0d6fbe50d6abd" kindref="member">dw_uart_putready</ref>(uart_reg_ptr)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_avail<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_avail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_avail<sp/>=<sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7d62ad97196cb1fb028d919c3c9f3694_1a7d62ad97196cb1fb028d919c3c9f3694" kindref="member">tx_fifo_len</ref><sp/>-<sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a018f42eb3bebb177241ec4aee2a34b66_1a018f42eb3bebb177241ec4aee2a34b66" kindref="member">TFL</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx_avail;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group__DEVICE__DW__UART__STATIC_gaac62cb6213fa0e985e4da95ef4270aa2_1gaac62cb6213fa0e985e4da95ef4270aa2" kindref="member">dw_uart_get_rxavail</ref>(<ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>rx_avail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_ade790f1d4bee20430d9549a7b397e425_1ade790f1d4bee20430d9549a7b397e425" kindref="member">rx_fifo_len</ref><sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DEVICE__DW__UART__STATIC_ga95b7911597cd9d386ed99f6ff5a437ff_1ga95b7911597cd9d386ed99f6ff5a437ff" kindref="member">dw_uart_getready</ref>(uart_reg_ptr)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_avail<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_avail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_avail<sp/>=<sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a83fbd54ad5d1c527c1830886c0991c4b_1a83fbd54ad5d1c527c1830886c0991c4b" kindref="member">RFL</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rx_avail;</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_a49c3f35887ad36260c0576c58614db71_1a49c3f35887ad36260c0576c58614db71" kindref="member">dw_uart_open</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/>uint32_t<sp/>baud)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structDEV__UART_ae4b6a665925b840b9c75ae93fd045d3f_1ae4b6a665925b840b9c75ae93fd045d3f" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a1de405431d52cf3d7375d77bcedb323a_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(baud<sp/>&gt;<sp/>0,<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_adde8c95dd69d642c1e08149d4bc457df_1adde8c95dd69d642c1e08149d4bc457df" kindref="member">opn_cnt</ref>++;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_adde8c95dd69d642c1e08149d4bc457df_1adde8c95dd69d642c1e08149d4bc457df" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>opened<sp/>before<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baud<sp/>==<sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a715a194c21fdd3ca8b694c4656188bbf_1a715a194c21fdd3ca8b694c4656188bbf" kindref="member">baudrate</ref>)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>baudrate<sp/>is<sp/>the<sp/>same<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>with<sp/>different<sp/>baudrate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__EMBARC__ERROR_gaa5935765e74b9d1a7e72c9c8f9018b42_1gaa5935765e74b9d1a7e72c9c8f9018b42" kindref="member">E_OPNED</ref>;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>baud_divisor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>uart_cpr;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_cpr<sp/>=<sp/>uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a9fb6547c256c3206d3d343c09061ecd0_1a9fb6547c256c3206d3d343c09061ecd0" kindref="member">CPR</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>FIFO<sp/>Length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_cpr<sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a58c1816ce49b2ede728368875784e665_1a58c1816ce49b2ede728368875784e665" kindref="member">DW_UART_CPR_FIFO_STAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7d62ad97196cb1fb028d919c3c9f3694_1a7d62ad97196cb1fb028d919c3c9f3694" kindref="member">tx_fifo_len</ref><sp/>=<sp/>((uart_cpr<sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a190e58db75f69fe754d83d7c8991bb6a_1a190e58db75f69fe754d83d7c8991bb6a" kindref="member">DW_UART_CPR_FIFO_MODE</ref>)<sp/>&gt;&gt;<sp/><ref refid="dw__uart__hal_8h_accb9bf9f6c8f5e5a99e809ea74f13035_1accb9bf9f6c8f5e5a99e809ea74f13035" kindref="member">DW_UART_CPR_FIFO_MODE_OFS</ref>)<sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_ade790f1d4bee20430d9549a7b397e425_1ade790f1d4bee20430d9549a7b397e425" kindref="member">rx_fifo_len</ref><sp/>=<sp/>((uart_cpr<sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a190e58db75f69fe754d83d7c8991bb6a_1a190e58db75f69fe754d83d7c8991bb6a" kindref="member">DW_UART_CPR_FIFO_MODE</ref>)<sp/>&gt;&gt;<sp/><ref refid="dw__uart__hal_8h_accb9bf9f6c8f5e5a99e809ea74f13035_1accb9bf9f6c8f5e5a99e809ea74f13035" kindref="member">DW_UART_CPR_FIFO_MODE_OFS</ref>)<sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7d62ad97196cb1fb028d919c3c9f3694_1a7d62ad97196cb1fb028d919c3c9f3694" kindref="member">tx_fifo_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_ade790f1d4bee20430d9549a7b397e425_1ade790f1d4bee20430d9549a7b397e425" kindref="member">rx_fifo_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a715a194c21fdd3ca8b694c4656188bbf_1a715a194c21fdd3ca8b694c4656188bbf" kindref="member">baudrate</ref><sp/>=<sp/>baud;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>baud_divisor<sp/>=<sp/><ref refid="dw__uart_8c_aee6cb6cbccff7ec5bd4567fdc9153762_1aee6cb6cbccff7ec5bd4567fdc9153762" kindref="member">DW_UART_BAUD2DIV</ref>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_ae4ac17d9ac926d9c9546e2216a1ec003_1ae4ac17d9ac926d9c9546e2216a1ec003" kindref="member">dw_apb_bus_freq</ref>,<sp/>baud);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__HAL__UART__FORMAT_ga196f96a14810730974e3b511b20b02eb_1ga196f96a14810730974e3b511b20b02eb" kindref="member">UART_DPS_FORMAT_DEFAULT</ref>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a728beb5d2027c8ff3ab82f3d3900bb71_1a728beb5d2027c8ff3ab82f3d3900bb71" kindref="member">dps_format</ref>);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_abb7c19fc67ec964cdda1bd9e2f907f1e_1abb7c19fc67ec964cdda1bd9e2f907f1e" kindref="member">hwfc</ref><sp/>=<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1ggaa79a1d08e403b54670b892c0c58d91d5a542109175bf0b1928d4803f2702ce1ed" kindref="member">UART_FC_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga2e6916f0af485cf8578374b0c6cb95eb_1ga2e6916f0af485cf8578374b0c6cb95eb" kindref="member">dw_uart_init</ref>(uart_reg_ptr,<sp/>baud_divisor,<sp/>&amp;(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a728beb5d2027c8ff3ab82f3d3900bb71_1a728beb5d2027c8ff3ab82f3d3900bb71" kindref="member">dps_format</ref>),<sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_abb7c19fc67ec964cdda1bd9e2f907f1e_1abb7c19fc67ec964cdda1bd9e2f907f1e" kindref="member">hwfc</ref>);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>=<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_gaad1f383b0e8eb7feec60f52998730eff_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_af3156f595f1020fbffea67951a86d2f5_1af3156f595f1020fbffea67951a86d2f5" kindref="member">extra</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gab989ee3c9df5d9163650670273df8283_1gab989ee3c9df5d9163650670273df8283" kindref="member">dw_uart_disable_interrupt</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" kindref="member">intno</ref><sp/>!=<sp/><ref refid="dw__uart_8h_a57c6c86833b7a3edd7309dc3563e639e_1a57c6c86833b7a3edd7309dc3563e639e" kindref="member">DW_UART_INVALID_INTNO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__EXCEPTION__INTERRUPT_ga75a43aab696debc012bc72b6de13e30a_1ga75a43aab696debc012bc72b6de13e30a" kindref="member">int_handler_install</ref>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" kindref="member">intno</ref>,<sp/>uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a5159f5d96367a574a08eaf094ff59960_1a5159f5d96367a574a08eaf094ff59960" kindref="member">dw_uart_int_handler</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a46a3dfad9be100563bf4101055780843_1a46a3dfad9be100563bf4101055780843" kindref="member">rx_buf</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structDEV__UART__CBS" kindref="compound">DEV_UART_CBS</ref>));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_a40287dfa053b6bc49bcaf66c35d73b1c_1a40287dfa053b6bc49bcaf66c35d73b1c" kindref="member">dw_uart_close</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structDEV__UART_ae4b6a665925b840b9c75ae93fd045d3f_1ae4b6a665925b840b9c75ae93fd045d3f" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a1de405431d52cf3d7375d77bcedb323a_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_adde8c95dd69d642c1e08149d4bc457df_1adde8c95dd69d642c1e08149d4bc457df" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>0,<sp/><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_adde8c95dd69d642c1e08149d4bc457df_1adde8c95dd69d642c1e08149d4bc457df" kindref="member">opn_cnt</ref>--;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_adde8c95dd69d642c1e08149d4bc457df_1adde8c95dd69d642c1e08149d4bc457df" kindref="member">opn_cnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gab989ee3c9df5d9163650670273df8283_1gab989ee3c9df5d9163650670273df8283" kindref="member">dw_uart_disable_interrupt</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga74b2995571a4daecb84808b56a12e3e0_1ga74b2995571a4daecb84808b56a12e3e0" kindref="member">dw_uart_abort_tx</ref>(uart_obj);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga17cb2aa3d8fa1de710018838f34b2da6_1ga17cb2aa3d8fa1de710018838f34b2da6" kindref="member">dw_uart_abort_rx</ref>(uart_obj);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga296ed0af981331eed09ff311cf9b17e6_1ga296ed0af981331eed09ff311cf9b17e6" kindref="member">dw_uart_flush_output</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a46a3dfad9be100563bf4101055780843_1a46a3dfad9be100563bf4101055780843" kindref="member">rx_buf</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structDEV__UART__CBS" kindref="compound">DEV_UART_CBS</ref>));</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga6dd5da5a303245d2c1a95564d8cbe980_1ga6dd5da5a303245d2c1a95564d8cbe980" kindref="member">dw_uart_disable_device</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_af3156f595f1020fbffea67951a86d2f5_1af3156f595f1020fbffea67951a86d2f5" kindref="member">extra</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/><ref refid="group__EMBARC__ERROR_gaa5935765e74b9d1a7e72c9c8f9018b42_1gaa5935765e74b9d1a7e72c9c8f9018b42" kindref="member">E_OPNED</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_aad6c59b900e3f9b72b1eac4ca889f317_1aad6c59b900e3f9b72b1eac4ca889f317" kindref="member">dw_uart_control</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/>uint32_t<sp/>ctrl_cmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structDEV__UART_ae4b6a665925b840b9c75ae93fd045d3f_1ae4b6a665925b840b9c75ae93fd045d3f" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a1de405431d52cf3d7375d77bcedb323a_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_adde8c95dd69d642c1e08149d4bc457df_1adde8c95dd69d642c1e08149d4bc457df" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>0,<sp/><ref refid="group__EMBARC__ERROR_gac4e674c971a46afe82377d02a2d19451_1gac4e674c971a46afe82377d02a2d19451" kindref="member">E_CLSED</ref>);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>val32;<sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>baud_divisor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref><sp/>*devbuf;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structUART__DPS__FORMAT" kindref="compound">UART_DPS_FORMAT</ref><sp/>*dps_ptr;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref><sp/>hwfc_local;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>current<sp/>device<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_gaad1f383b0e8eb7feec60f52998730eff_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ctrl_cmd<sp/>!=<sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga778353469e5446cd8e540720792e39a8_1ga778353469e5446cd8e540720792e39a8" kindref="member">UART_CMD_ENA_DEV</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctrl_cmd<sp/>!=<sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_gae7d733241c19376c55bb6873ba39abae_1gae7d733241c19376c55bb6873ba39abae" kindref="member">UART_CMD_DIS_DEV</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctrl_cmd<sp/>!=<sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_gacf4d94078ba78b978a620c7e6b352736_1gacf4d94078ba78b978a620c7e6b352736" kindref="member">UART_CMD_GET_STATUS</ref>))<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__EMBARC__ERROR_gae5989e632e687010b35b613304089823_1gae5989e632e687010b35b613304089823" kindref="member">E_SYS</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ctrl_cmd)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga764fa9e43d0e6386328e6123469dfd05_1ga764fa9e43d0e6386328e6123469dfd05" kindref="member">UART_CMD_SET_BAUD</ref>:</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val32<sp/>=<sp/>(uint32_t)param;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(val32<sp/>&gt;<sp/>0,<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>!=<sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a715a194c21fdd3ca8b694c4656188bbf_1a715a194c21fdd3ca8b694c4656188bbf" kindref="member">baudrate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baud_divisor<sp/>=<sp/><ref refid="dw__uart_8c_aee6cb6cbccff7ec5bd4567fdc9153762_1aee6cb6cbccff7ec5bd4567fdc9153762" kindref="member">DW_UART_BAUD2DIV</ref>(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_ae4ac17d9ac926d9c9546e2216a1ec003_1ae4ac17d9ac926d9c9546e2216a1ec003" kindref="member">dw_apb_bus_freq</ref>,<sp/>val32);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga80f4fd4e33a6e7758998c8562290a76e_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(uart_reg_ptr,<sp/>baud_divisor);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a715a194c21fdd3ca8b694c4656188bbf_1a715a194c21fdd3ca8b694c4656188bbf" kindref="member">baudrate</ref><sp/>=<sp/>val32;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_gacf4d94078ba78b978a620c7e6b352736_1gacf4d94078ba78b978a620c7e6b352736" kindref="member">UART_CMD_GET_STATUS</ref>:</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>((param<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/><ref refid="group__EMBARC__ERROR_gace3d588dc25676d080bcf53ee3522d63_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((int32_t<sp/>*)param)<sp/>=<sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga778353469e5446cd8e540720792e39a8_1ga778353469e5446cd8e540720792e39a8" kindref="member">UART_CMD_ENA_DEV</ref>:</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gac84e8d6126193d255334f825885681ae_1gac84e8d6126193d255334f825885681ae" kindref="member">dw_uart_enable_device</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_gae7d733241c19376c55bb6873ba39abae_1gae7d733241c19376c55bb6873ba39abae" kindref="member">UART_CMD_DIS_DEV</ref>:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga6dd5da5a303245d2c1a95564d8cbe980_1ga6dd5da5a303245d2c1a95564d8cbe980" kindref="member">dw_uart_disable_device</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_gae4fafef76cb1216e06523779ef842847_1gae4fafef76cb1216e06523779ef842847" kindref="member">UART_CMD_FLUSH_OUTPUT</ref>:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga296ed0af981331eed09ff311cf9b17e6_1ga296ed0af981331eed09ff311cf9b17e6" kindref="member">dw_uart_flush_output</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga8d2dc24b2777c4ad6ac72350c2d6b6c4_1ga8d2dc24b2777c4ad6ac72350c2d6b6c4" kindref="member">UART_CMD_GET_RXAVAIL</ref>:</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>((param<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/><ref refid="group__EMBARC__ERROR_gace3d588dc25676d080bcf53ee3522d63_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((int32_t<sp/>*)param)<sp/>=<sp/><ref refid="group__DEVICE__DW__UART__STATIC_gaac62cb6213fa0e985e4da95ef4270aa2_1gaac62cb6213fa0e985e4da95ef4270aa2" kindref="member">dw_uart_get_rxavail</ref>(uart_ctrl_ptr);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga3b38c556992512590acd208eda841c2c_1ga3b38c556992512590acd208eda841c2c" kindref="member">UART_CMD_GET_TXAVAIL</ref>:</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>((param<sp/>!=<sp/>NULL)<sp/>&amp;&amp;<sp/><ref refid="group__EMBARC__ERROR_gace3d588dc25676d080bcf53ee3522d63_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((int32_t<sp/>*)param)<sp/>=<sp/><ref refid="group__DEVICE__DW__UART__STATIC_gad3d9c1f9d9820d9358be93c1dbc95fe6_1gad3d9c1f9d9820d9358be93c1dbc95fe6" kindref="member">dw_uart_get_txavail</ref>(uart_ctrl_ptr);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga1f80b681a44db548672e225872820439_1ga1f80b681a44db548672e225872820439" kindref="member">UART_CMD_BREAK_SET</ref>:</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga75dc17b8200d755deb873719f450f591_1ga75dc17b8200d755deb873719f450f591" kindref="member">dw_uart_set_break</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga27cc6b038a8cbfb6b04af889d0d4121c_1ga27cc6b038a8cbfb6b04af889d0d4121c" kindref="member">UART_CMD_BREAK_CLR</ref>:</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gaaf4185afdab471643293981fab2021a9_1gaaf4185afdab471643293981fab2021a9" kindref="member">dw_uart_clr_break</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga814ea0d0efd24844998b46429c284c9e_1ga814ea0d0efd24844998b46429c284c9e" kindref="member">UART_CMD_SET_DPS_FORMAT</ref>:</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(param<sp/>!=<sp/>NULL,<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dps_ptr<sp/>=<sp/>(<ref refid="structUART__DPS__FORMAT" kindref="compound">UART_DPS_FORMAT</ref><sp/>*)param;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__DEVICE__DW__UART__STATIC_gaacbe47fcc6fd08b7b9aaa0581fd11b8e_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" kindref="member">dw_uart_set_dps</ref>(uart_reg_ptr,<sp/>dps_ptr)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a728beb5d2027c8ff3ab82f3d3900bb71_1a728beb5d2027c8ff3ab82f3d3900bb71" kindref="member">dps_format</ref><sp/>=<sp/>*dps_ptr;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga7fac96ac8950657bf84be4086327d708_1ga7fac96ac8950657bf84be4086327d708" kindref="member">UART_CMD_SET_HWFC</ref>:</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwfc_local<sp/>=<sp/>(<ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref>)param;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(((hwfc_local<sp/>&gt;=<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1ggaa79a1d08e403b54670b892c0c58d91d5a527864f0ec595151e7db5ef909fcf9f0" kindref="member">UART_FC_NONE</ref>)<sp/>&amp;&amp;<sp/>(hwfc_local<sp/>&lt;=<sp/><ref refid="group__DEVICE__HAL__UART_gaa79a1d08e403b54670b892c0c58d91d5_1ggaa79a1d08e403b54670b892c0c58d91d5a666090870593651febac7ad9db862760" kindref="member">UART_FC_BOTH</ref>)),<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gab528eba58066212798ba5fcedfbfa6de_1gab528eba58066212798ba5fcedfbfa6de" kindref="member">dw_uart_set_hwfc</ref>(uart_reg_ptr,<sp/>hwfc_local);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_abb7c19fc67ec964cdda1bd9e2f907f1e_1abb7c19fc67ec964cdda1bd9e2f907f1e" kindref="member">hwfc</ref><sp/>=<sp/>hwfc_local;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga0479fa2c6d071ba12b44649df16ad9ae_1ga0479fa2c6d071ba12b44649df16ad9ae" kindref="member">UART_CMD_SET_TXCB</ref>:</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group__EMBARC__ERROR_gace3d588dc25676d080bcf53ee3522d63_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a80ccaca0d2d3826ae8a91d2e8fb6be76_1a80ccaca0d2d3826ae8a91d2e8fb6be76" kindref="member">tx_cb</ref><sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga18aa857d3b0815ca0235f41e4b6c1067_1ga18aa857d3b0815ca0235f41e4b6c1067" kindref="member">UART_CMD_SET_RXCB</ref>:</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group__EMBARC__ERROR_gace3d588dc25676d080bcf53ee3522d63_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_ade466313b1b02d6e011e12604510ef9e_1ade466313b1b02d6e011e12604510ef9e" kindref="member">rx_cb</ref><sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga7161d329fc09ba91caf8196c949512ce_1ga7161d329fc09ba91caf8196c949512ce" kindref="member">UART_CMD_SET_ERRCB</ref>:</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group__EMBARC__ERROR_gace3d588dc25676d080bcf53ee3522d63_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a764ed682bf6106d462c95e7b14423d25_1a764ed682bf6106d462c95e7b14423d25" kindref="member">err_cb</ref><sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga96ebb358e1b93a49dffb6fd08ea9d52e_1ga96ebb358e1b93a49dffb6fd08ea9d52e" kindref="member">UART_CMD_ABORT_TX</ref>:</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga74b2995571a4daecb84808b56a12e3e0_1ga74b2995571a4daecb84808b56a12e3e0" kindref="member">dw_uart_abort_tx</ref>(uart_obj);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga091e096b839d8f76f284fc80428f6431_1ga091e096b839d8f76f284fc80428f6431" kindref="member">UART_CMD_ABORT_RX</ref>:</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga17cb2aa3d8fa1de710018838f34b2da6_1ga17cb2aa3d8fa1de710018838f34b2da6" kindref="member">dw_uart_abort_rx</ref>(uart_obj);</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_gab3644b0ee0991f276c0e4d20d794ac96_1gab3644b0ee0991f276c0e4d20d794ac96" kindref="member">UART_CMD_SET_TXINT</ref>:</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val32<sp/>=<sp/>(uint32_t)param;</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ac95bdbdc9b968146b56e2799bed84a09_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga34b6916c9c6d6336d813a95986d6beac_1ga34b6916c9c6d6336d813a95986d6beac" kindref="member">dw_uart_ena_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ac95bdbdc9b968146b56e2799bed84a09_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga04b7d1f98d6a94c3590677121a853105_1ga04b7d1f98d6a94c3590677121a853105" kindref="member">UART_CMD_SET_RXINT</ref>:</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val32<sp/>=<sp/>(uint32_t)param;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ad06558b8493c1463445b785e398694aa_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga34b6916c9c6d6336d813a95986d6beac_1ga34b6916c9c6d6336d813a95986d6beac" kindref="member">dw_uart_ena_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ad06558b8493c1463445b785e398694aa_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga45de4c83687e1c2ccb305a5d9c26077a_1ga45de4c83687e1c2ccb305a5d9c26077a" kindref="member">UART_CMD_SET_TXINT_BUF</ref>:</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group__EMBARC__ERROR_gace3d588dc25676d080bcf53ee3522d63_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devbuf<sp/>=<sp/>(<ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref><sp/>*)param;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref><sp/>=<sp/>*devbuf;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_a29925f487f183aba636d7372084ceae8_1a29925f487f183aba636d7372084ceae8" kindref="member">buf</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_ab8247876575c08659c01c8300f805619_1ab8247876575c08659c01c8300f805619" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>.<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__DEVICE__HAL__UART__CTRLCMD_gab41fc9f4e9745c1d30bf3bbd0733ab31_1gab41fc9f4e9745c1d30bf3bbd0733ab31" kindref="member">UART_CMD_SET_RXINT_BUF</ref>:</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group__EMBARC__ERROR_gace3d588dc25676d080bcf53ee3522d63_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devbuf<sp/>=<sp/>(<ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref><sp/>*)param;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a46a3dfad9be100563bf4101055780843_1a46a3dfad9be100563bf4101055780843" kindref="member">rx_buf</ref><sp/>=<sp/>*devbuf;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a46a3dfad9be100563bf4101055780843_1a46a3dfad9be100563bf4101055780843" kindref="member">rx_buf</ref>.<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a46a3dfad9be100563bf4101055780843_1a46a3dfad9be100563bf4101055780843" kindref="member">rx_buf</ref>.<ref refid="structDEV__BUFFER_a29925f487f183aba636d7372084ceae8_1a29925f487f183aba636d7372084ceae8" kindref="member">buf</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a46a3dfad9be100563bf4101055780843_1a46a3dfad9be100563bf4101055780843" kindref="member">rx_buf</ref>.<ref refid="structDEV__BUFFER_ab8247876575c08659c01c8300f805619_1ab8247876575c08659c01c8300f805619" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a46a3dfad9be100563bf4101055780843_1a46a3dfad9be100563bf4101055780843" kindref="member">rx_buf</ref>.<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/><ref refid="group__EMBARC__ERROR_gac05cde47c29052935fd39d6d8a6c5ff4_1gac05cde47c29052935fd39d6d8a6c5ff4" kindref="member">E_NOSPT</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_a66f55a5d83c8d575ff0c2add94e6ec51_1a66f55a5d83c8d575ff0c2add94e6ec51" kindref="member">dw_uart_write</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>len)</highlight></codeline>
<codeline lineno="802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structDEV__UART_ae4b6a665925b840b9c75ae93fd045d3f_1ae4b6a665925b840b9c75ae93fd045d3f" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a1de405431d52cf3d7375d77bcedb323a_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_adde8c95dd69d642c1e08149d4bc457df_1adde8c95dd69d642c1e08149d4bc457df" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>0,<sp/><ref refid="group__EMBARC__ERROR_gac4e674c971a46afe82377d02a2d19451_1gac4e674c971a46afe82377d02a2d19451" kindref="member">E_CLSED</ref>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_gaad1f383b0e8eb7feec60f52998730eff_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>,<sp/><ref refid="group__EMBARC__ERROR_gae5989e632e687010b35b613304089823_1gae5989e632e687010b35b613304089823" kindref="member">E_SYS</ref>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(data<sp/>!=<sp/>NULL,<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(len<sp/>&gt;<sp/>0,<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_charbuf<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)data;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga9a633aef423657a3b131e2273d01733d_1ga9a633aef423657a3b131e2273d01733d" kindref="member">dw_uart_psnd_chr</ref>(uart_reg_ptr,<sp/>p_charbuf[i++]);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_a9f48bb55260aea46433c78bfd0935c69_1a9f48bb55260aea46433c78bfd0935c69" kindref="member">dw_uart_read</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>len)</highlight></codeline>
<codeline lineno="840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structDEV__UART_ae4b6a665925b840b9c75ae93fd045d3f_1ae4b6a665925b840b9c75ae93fd045d3f" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a1de405431d52cf3d7375d77bcedb323a_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_adde8c95dd69d642c1e08149d4bc457df_1adde8c95dd69d642c1e08149d4bc457df" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>0,<sp/><ref refid="group__EMBARC__ERROR_gac4e674c971a46afe82377d02a2d19451_1gac4e674c971a46afe82377d02a2d19451" kindref="member">E_CLSED</ref>);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a7953a8568f0cb6e19684fc7bb35c7909_1a7953a8568f0cb6e19684fc7bb35c7909" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group__DEVICE__HAL__COMMON__DEVSTATUS_gaad1f383b0e8eb7feec60f52998730eff_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>,<sp/><ref refid="group__EMBARC__ERROR_gae5989e632e687010b35b613304089823_1gae5989e632e687010b35b613304089823" kindref="member">E_SYS</ref>);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(data<sp/>!=<sp/>NULL,<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a8866d97c5a3a75b78f9feea8446ca1a8_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(len<sp/>&gt;<sp/>0,<sp/><ref refid="group__EMBARC__ERROR_ga28d0303b78b18735ae91a99ecc11bc8e_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_charbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)data;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf[i++]<sp/>=<sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga7eef85dc8a52cea140f647e4ab027e71_1ga7eef85dc8a52cea140f647e4ab027e71" kindref="member">dw_uart_prcv_chr</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_a931f15b8f8a5a29ab3a7344aa3cb10d2_1a931f15b8f8a5a29ab3a7344aa3cb10d2" kindref="member">dw_uart_isr</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group__EMBARC__ERROR_ga1e7cc741c56207a8872ea58373276925_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__UART__INFO" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structDEV__UART_ae4b6a665925b840b9c75ae93fd045d3f_1ae4b6a665925b840b9c75ae93fd045d3f" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_a1de405431d52cf3d7375d77bcedb323a_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>uart_int_status;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>temp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref><sp/>*buf_ptr;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_charbuf;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aa92add07634073b8e59cddb0bb1ac1a5_1aa92add07634073b8e59cddb0bb1ac1a5" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>)(uart_ctrl_ptr-&gt;<ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>uart_int_status<sp/>=<sp/>(uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_aa4ad6108d5b70892b6e862751488b421_1aa4ad6108d5b70892b6e862751488b421" kindref="member">IIR</ref>)<sp/>&amp;<sp/><ref refid="dw__uart__hal_8h_a6b40c36144ec5643e337536f0e963d5d_1a6b40c36144ec5643e337536f0e963d5d" kindref="member">DW_UART_IIR_INT_ID_MASK</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(uart_int_status)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart__hal_8h_a53073597d6cc795787863326497af407_1a53073597d6cc795787863326497af407" kindref="member">DW_UART_IIR_MDM_STATUS</ref>:</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t)(uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a5b6ec374f087b4858f386cc7382c791b_1a5b6ec374f087b4858f386cc7382c791b" kindref="member">MSR</ref>);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart__hal_8h_aa5d0335284c0d7de27ff190cda45cb1e_1aa5d0335284c0d7de27ff190cda45cb1e" kindref="member">DW_UART_IIR_LINE_STATUS</ref>:</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a764ed682bf6106d462c95e7b14423d25_1a764ed682bf6106d462c95e7b14423d25" kindref="member">err_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a764ed682bf6106d462c95e7b14423d25_1a764ed682bf6106d462c95e7b14423d25" kindref="member">err_cb</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t)(uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a6444283340d62a1397a209a473a83efa_1a6444283340d62a1397a209a473a83efa" kindref="member">LSR</ref>);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart__hal_8h_aa35afd90341514002caeae1002b165c0_1aa35afd90341514002caeae1002b165c0" kindref="member">DW_UART_IIR_XMIT_EMPTY</ref>:</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr<sp/>=<sp/>&amp;(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a1c333ec589043dd20a566051e92bf1cf_1a1c333ec589043dd20a566051e92bf1cf" kindref="member">tx_buf</ref>);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buf_ptr-&gt;<ref refid="structDEV__BUFFER_a29925f487f183aba636d7372084ceae8_1a29925f487f183aba636d7372084ceae8" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(p_charbuf<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DEVICE__DW__UART__STATIC_ga5e9dba55767cdfd596f0d6fbe50d6abd_1ga5e9dba55767cdfd596f0d6fbe50d6abd" kindref="member">dw_uart_putready</ref>(uart_reg_ptr))<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_gac4344753a1f1cf3f87540d466620ddcf_1gac4344753a1f1cf3f87540d466620ddcf" kindref="member">dw_uart_putchar</ref>(uart_reg_ptr,<sp/>p_charbuf[buf_ptr-&gt;<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref>]);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr-&gt;<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref>++;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_ptr-&gt;<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref><sp/>&gt;=<sp/>buf_ptr-&gt;<ref refid="structDEV__BUFFER_ab8247876575c08659c01c8300f805619_1ab8247876575c08659c01c8300f805619" kindref="member">len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ac95bdbdc9b968146b56e2799bed84a09_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a80ccaca0d2d3826ae8a91d2e8fb6be76_1a80ccaca0d2d3826ae8a91d2e8fb6be76" kindref="member">tx_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a80ccaca0d2d3826ae8a91d2e8fb6be76_1a80ccaca0d2d3826ae8a91d2e8fb6be76" kindref="member">tx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>send<sp/>buffer<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(buf_ptr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a80ccaca0d2d3826ae8a91d2e8fb6be76_1a80ccaca0d2d3826ae8a91d2e8fb6be76" kindref="member">tx_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_a80ccaca0d2d3826ae8a91d2e8fb6be76_1a80ccaca0d2d3826ae8a91d2e8fb6be76" kindref="member">tx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart__hal_8h_a72848c016e8001a611c54b62f35f7449_1a72848c016e8001a611c54b62f35f7449" kindref="member">DW_UART_IIR_RX_TIMEOUT</ref>:</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga2913d268fd216616d9505d298c71cc04_1ga2913d268fd216616d9505d298c71cc04" kindref="member">dw_uart_getchar</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart__hal_8h_ae18ffa50aea7c4b6f2c3c09177294dc5_1ae18ffa50aea7c4b6f2c3c09177294dc5" kindref="member">DW_UART_IIR_DATA_AVAIL</ref>:</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr<sp/>=<sp/>&amp;(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_a46a3dfad9be100563bf4101055780843_1a46a3dfad9be100563bf4101055780843" kindref="member">rx_buf</ref>);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buf_ptr-&gt;<ref refid="structDEV__BUFFER_a29925f487f183aba636d7372084ceae8_1a29925f487f183aba636d7372084ceae8" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(p_charbuf<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group__DEVICE__DW__UART__STATIC_ga95b7911597cd9d386ed99f6ff5a437ff_1ga95b7911597cd9d386ed99f6ff5a437ff" kindref="member">dw_uart_getready</ref>(uart_reg_ptr))<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf[buf_ptr-&gt;<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref>]<sp/>=<sp/>(char)<ref refid="group__DEVICE__DW__UART__STATIC_ga2913d268fd216616d9505d298c71cc04_1ga2913d268fd216616d9505d298c71cc04" kindref="member">dw_uart_getchar</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr-&gt;<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref>++;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_ptr-&gt;<ref refid="structDEV__BUFFER_aa4b70b6304dbaed7171b7d92817f8353_1aa4b70b6304dbaed7171b7d92817f8353" kindref="member">ofs</ref><sp/>&gt;=<sp/>buf_ptr-&gt;<ref refid="structDEV__BUFFER_ab8247876575c08659c01c8300f805619_1ab8247876575c08659c01c8300f805619" kindref="member">len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__DEVICE__DW__UART__STATIC_ga996db08e5110d96068b8bee2f1108bfa_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_ad06558b8493c1463445b785e398694aa_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_ade466313b1b02d6e011e12604510ef9e_1ade466313b1b02d6e011e12604510ef9e" kindref="member">rx_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_ade466313b1b02d6e011e12604510ef9e_1ade466313b1b02d6e011e12604510ef9e" kindref="member">rx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>send<sp/>buffer<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(buf_ptr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structDEV__BUFFER" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_ade466313b1b02d6e011e12604510ef9e_1ade466313b1b02d6e011e12604510ef9e" kindref="member">rx_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structDEV__UART__INFO_aec0917d316df9518fbd8c6ee7db1161b_1aec0917d316df9518fbd8c6ee7db1161b" kindref="member">uart_cbs</ref>.<ref refid="structDEV__UART__CBS_ade466313b1b02d6e011e12604510ef9e_1ade466313b1b02d6e011e12604510ef9e" kindref="member">rx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t)(uart_reg_ptr-&gt;<ref refid="structDW__UART__REG_a0927fb033fd8d27780e817eae6b2f1a3_1a0927fb033fd8d27780e817eae6b2f1a3" kindref="member">USR</ref>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c"/>
  </compounddef>
</doxygen>
