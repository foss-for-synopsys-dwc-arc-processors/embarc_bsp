<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="dw__uart_8h" kind="file">
    <compoundname>dw_uart.h</compoundname>
    <includes refid="dev__uart_8h" local="yes">device/ip_hal/dev_uart.h</includes>
    <includes refid="arc__exception_8h" local="yes">arc/arc_exception.h</includes>
    <includedby refid="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" local="yes">/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/axs/drivers/ip/designware/uart/dw_uart_obj.c</includedby>
    <includedby refid="emsdp_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" local="yes">/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/emsdp/drivers/ip/designware/uart/dw_uart_obj.c</includedby>
    <includedby refid="emsk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" local="yes">/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/emsk/drivers/ip/designware/uart/dw_uart_obj.c</includedby>
    <includedby refid="hsdk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" local="yes">/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/hsdk/drivers/ip/designware/uart/dw_uart_obj.c</includedby>
    <includedby refid="nsim__uart__obj_8c" local="yes">/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/nsim/drivers/uart/nsim_uart_obj.c</includedby>
    <includedby refid="dw__uart_8c" local="yes">/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c</includedby>
    <incdepgraph>
      <node id="4371">
        <label>stdbool.h</label>
      </node>
      <node id="4367">
        <label>embARC_toolchain.h</label>
        <link refid="embARC__toolchain_8h"/>
        <childnode refid="4368" relation="include">
        </childnode>
        <childnode refid="4369" relation="include">
        </childnode>
        <childnode refid="4370" relation="include">
        </childnode>
        <childnode refid="4371" relation="include">
        </childnode>
      </node>
      <node id="4368">
        <label>stdint.h</label>
      </node>
      <node id="4370">
        <label>stddef.h</label>
      </node>
      <node id="4374">
        <label>arc/arc.h</label>
        <link refid="arc_8h"/>
        <childnode refid="4375" relation="include">
        </childnode>
      </node>
      <node id="4369">
        <label>limits.h</label>
      </node>
      <node id="4375">
        <label>arc/arc_feature_config.h</label>
        <link refid="arc__feature__config_8h"/>
      </node>
      <node id="4365">
        <label>device/ip_hal/dev_uart.h</label>
        <link refid="dev__uart_8h"/>
        <childnode refid="4366" relation="include">
        </childnode>
      </node>
      <node id="4366">
        <label>device/dev_common.h</label>
        <link refid="dev__common_8h"/>
        <childnode refid="4367" relation="include">
        </childnode>
      </node>
      <node id="4364">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h</label>
        <link refid="dw_uart.h"/>
        <childnode refid="4365" relation="include">
        </childnode>
        <childnode refid="4372" relation="include">
        </childnode>
      </node>
      <node id="4372">
        <label>arc/arc_exception.h</label>
        <link refid="arc__exception_8h"/>
        <childnode refid="4373" relation="include">
        </childnode>
      </node>
      <node id="4373">
        <label>arc/arc_builtin.h</label>
        <link refid="arc__builtin_8h"/>
        <childnode refid="4367" relation="include">
        </childnode>
        <childnode refid="4374" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4379">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/emsk/drivers/ip/designware/uart/dw_uart_obj.c</label>
        <link refid="emsk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c"/>
      </node>
      <node id="4381">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/nsim/drivers/uart/nsim_uart_obj.c</label>
        <link refid="nsim__uart__obj_8c"/>
      </node>
      <node id="4377">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/axs/drivers/ip/designware/uart/dw_uart_obj.c</label>
        <link refid="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c"/>
      </node>
      <node id="4376">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h</label>
        <link refid="dw_uart.h"/>
        <childnode refid="4377" relation="include">
        </childnode>
        <childnode refid="4378" relation="include">
        </childnode>
        <childnode refid="4379" relation="include">
        </childnode>
        <childnode refid="4380" relation="include">
        </childnode>
        <childnode refid="4381" relation="include">
        </childnode>
        <childnode refid="4382" relation="include">
        </childnode>
      </node>
      <node id="4378">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/emsdp/drivers/ip/designware/uart/dw_uart_obj.c</label>
        <link refid="emsdp_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c"/>
      </node>
      <node id="4382">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c</label>
        <link refid="dw__uart_8c"/>
      </node>
      <node id="4380">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/board/hsdk/drivers/ip/designware/uart/dw_uart_obj.c</label>
        <link refid="hsdk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structDW__UART__REG" prot="public">DW_UART_REG</innerclass>
    <innerclass refid="structDW__UART__CTRL" prot="public">DW_UART_CTRL</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dw__uart_8h_a09bdb44e74b75daad91da4985ab12568_1a09bdb44e74b75daad91da4985ab12568" prot="public" static="no">
        <name>DEVICE_USE_DESIGNWARE_UART</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if this header file is included, will indicate that this designware uart device is used </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="42" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8h_af4f51c07450de863acf90f5d6da19e76_1af4f51c07450de863acf90f5d6da19e76" prot="public" static="no">
        <name>DW_UART_GINT_DISABLED</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>designware interrupt disabled for control uart irq/fiq </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="86" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8h_ac7b6b350d796de899fa93483ca697695_1ac7b6b350d796de899fa93483ca697695" prot="public" static="no">
        <name>DW_UART_GINT_ENABLE</name>
        <initializer>(1 &lt;&lt; 0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>designware interrupt enabled for control uart irq/fiq </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="87" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8h_ab16608b3249786f0e0c4282b66bbb64d_1ab16608b3249786f0e0c4282b66bbb64d" prot="public" static="no">
        <name>DW_UART_TXINT_ENABLE</name>
        <initializer>(1 &lt;&lt; 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>designware interrupt enabled for control transmit process </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="88" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8h_a1e495eaace4cbeb5a95407a074be5581_1a1e495eaace4cbeb5a95407a074be5581" prot="public" static="no">
        <name>DW_UART_RXINT_ENABLE</name>
        <initializer>(1 &lt;&lt; 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>designware interrupt enabled for control transmit process </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="89" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8h_a57c6c86833b7a3edd7309dc3563e639e_1a57c6c86833b7a3edd7309dc3563e639e" prot="public" static="no">
        <name>DW_UART_INVALID_INTNO</name>
        <initializer>(<ref refid="group__DEVICE__HAL__COMMON_ga1c959a409ad6e952dc79b876f8e9b861_1ga1c959a409ad6e952dc79b876f8e9b861" kindref="member">DEV_INTNO_INVALID</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="91" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" prot="public" static="no">
        <type>struct <ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref> *</type>
        <definition>typedef  struct DW_UART_REG * DW_UART_REG_PTR</definition>
        <argsstring></argsstring>
        <name>DW_UART_REG_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" prot="public" static="no">
        <type>struct <ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref> *</type>
        <definition>typedef  struct DW_UART_CTRL * DW_UART_CTRL_PTR</definition>
        <argsstring></argsstring>
        <name>DW_UART_CTRL_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dw__uart_8h_a49c3f35887ad36260c0576c58614db71_1a49c3f35887ad36260c0576c58614db71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_open</definition>
        <argsstring>(DEV_UART *uart_obj, uint32_t baud)</argsstring>
        <name>dw_uart_open</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baud</declname>
        </param>
        <briefdescription>
<para>Open a designware uart device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baud</parametername>
</parameternamelist>
<parameterdescription>
<para>Baud rate </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>If device was opened before with different baudrate, then return E_OPNED </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Open settings are not supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>init uart</para><para>uart interrupt related init</para><para>install uart interrupt into system </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="111" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="527" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8h_a40287dfa053b6bc49bcaf66c35d73b1c_1a40287dfa053b6bc49bcaf66c35d73b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_close</definition>
        <argsstring>(DEV_UART *uart_obj)</argsstring>
        <name>dw_uart_close</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <briefdescription>
<para>Close a DesignWare UART device. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still opened, the device opn_cnt decreased by 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="112" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="596" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8h_aad6c59b900e3f9b72b1eac4ca889f317_1aad6c59b900e3f9b72b1eac4ca889f317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_control</definition>
        <argsstring>(DEV_UART *uart_obj, uint32_t ctrl_cmd, void *param)</argsstring>
        <name>dw_uart_control</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ctrl_cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Control uart by ctrl command. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DEVICE__HAL__UART__CTRLCMD" kindref="compound">control command</ref>, to change or get some thing related to uart </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters used to control uart or return something </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CLSED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is not opened </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_DIS</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is disabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to hardware issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to different reasons like in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Control command is not supported or not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>to receive unsigned int value</para><para>When device is disabled, only UART_CMD_ENA_DEV, UART_CMD_DIS_DEV, UART_CMD_GET_STATUS are available, other commands will return E_SYS</para><para>&lt; ready to send callback</para><para>&lt; ready to send callback</para><para>&lt; ready to receive callback</para><para>&lt; ready to receive callback </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="113" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="640" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8h_a66f55a5d83c8d575ff0c2add94e6ec51_1a66f55a5d83c8d575ff0c2add94e6ec51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_write</definition>
        <argsstring>(DEV_UART *uart_obj, const void *data, uint32_t len)</argsstring>
        <name>dw_uart_write</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Send data through DesignWare UART. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to send (data must be char type) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Data length to send </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0 Byte count that was successfully sent for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t write data to hardware due to hardware issues </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="114" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="801" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8h_a9f48bb55260aea46433c78bfd0935c69_1a9f48bb55260aea46433c78bfd0935c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_read</definition>
        <argsstring>(DEV_UART *uart_obj, void *data, uint32_t len)</argsstring>
        <name>dw_uart_read</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Read data through DesignWare UART. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data that need to read (data must be char type) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Data count to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0 Byte count that was successfully sent for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t receive data from hardware due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="115" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="839" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8h_a931f15b8f8a5a29ab3a7344aa3cb10d2_1a931f15b8f8a5a29ab3a7344aa3cb10d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dw_uart_isr</definition>
        <argsstring>(DEV_UART *uart_obj, void *ptr)</argsstring>
        <name>dw_uart_isr</name>
        <param>
          <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>DesignWare UART interrupt processing routine. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>Extra information </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>uart interrupt status</para><para>read error status to clear interrupt</para><para>get uart interrupt status</para><para>&lt; ready to send callback</para><para>&lt; ready to receive callback </para>        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h" line="116" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/device/ip/designware/uart/dw_uart.c" bodystart="872" bodyend="958"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>Synopsys,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>3)<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Synopsys,<sp/>Inc.,<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>---------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>H_DW_UART</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>H_DW_UART</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dev__uart_8h" kindref="compound">device/ip_hal/dev_uart.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arc__exception_8h" kindref="compound">arc/arc_exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="dw__uart_8h_a09bdb44e74b75daad91da4985ab12568_1a09bdb44e74b75daad91da4985ab12568" refkind="member"><highlight class="preprocessor">#define<sp/>DEVICE_USE_DESIGNWARE_UART</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="52" refid="structDW__UART__REG" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="structDW__UART__REG_abaf92af860d2aa518ca8a3dbce2c038c_1abaf92af860d2aa518ca8a3dbce2c038c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_abaf92af860d2aa518ca8a3dbce2c038c_1abaf92af860d2aa518ca8a3dbce2c038c" kindref="member">DATA</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structDW__UART__REG_a88ac74d7b15be384d32e7a496cd99f06_1a88ac74d7b15be384d32e7a496cd99f06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a88ac74d7b15be384d32e7a496cd99f06_1a88ac74d7b15be384d32e7a496cd99f06" kindref="member">IER</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structDW__UART__REG_aa4ad6108d5b70892b6e862751488b421_1aa4ad6108d5b70892b6e862751488b421" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_aa4ad6108d5b70892b6e862751488b421_1aa4ad6108d5b70892b6e862751488b421" kindref="member">IIR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="structDW__UART__REG_a1a7f793561bd7febe4851bde4a97a889_1a1a7f793561bd7febe4851bde4a97a889" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a1a7f793561bd7febe4851bde4a97a889_1a1a7f793561bd7febe4851bde4a97a889" kindref="member">LCR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="structDW__UART__REG_acdd06bacacbc2156e31b00e97f5c4b68_1acdd06bacacbc2156e31b00e97f5c4b68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_acdd06bacacbc2156e31b00e97f5c4b68_1acdd06bacacbc2156e31b00e97f5c4b68" kindref="member">MCR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="structDW__UART__REG_a6444283340d62a1397a209a473a83efa_1a6444283340d62a1397a209a473a83efa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a6444283340d62a1397a209a473a83efa_1a6444283340d62a1397a209a473a83efa" kindref="member">LSR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59" refid="structDW__UART__REG_a5b6ec374f087b4858f386cc7382c791b_1a5b6ec374f087b4858f386cc7382c791b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a5b6ec374f087b4858f386cc7382c791b_1a5b6ec374f087b4858f386cc7382c791b" kindref="member">MSR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60" refid="structDW__UART__REG_aa0ea47ef82ccca79fc7baeda69f3ace4_1aa0ea47ef82ccca79fc7baeda69f3ace4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_aa0ea47ef82ccca79fc7baeda69f3ace4_1aa0ea47ef82ccca79fc7baeda69f3ace4" kindref="member">SCRATCHPAD</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="structDW__UART__REG_a9afabd664f0e8041d1510546e4dd571c_1a9afabd664f0e8041d1510546e4dd571c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a9afabd664f0e8041d1510546e4dd571c_1a9afabd664f0e8041d1510546e4dd571c" kindref="member">LPDLL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="structDW__UART__REG_a366cfeba8c7591a0c2b98565a87f4095_1a366cfeba8c7591a0c2b98565a87f4095" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a366cfeba8c7591a0c2b98565a87f4095_1a366cfeba8c7591a0c2b98565a87f4095" kindref="member">LPDLH</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="structDW__UART__REG_a0175fdb29dba69e89524d17e7f797d15_1a0175fdb29dba69e89524d17e7f797d15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>RES1[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="structDW__UART__REG_aa95b4fea274c894b24f18c45a1cf7ead_1aa95b4fea274c894b24f18c45a1cf7ead" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>SHR[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65" refid="structDW__UART__REG_aaa0ba926581de39b6babfadcaf8ae489_1aaa0ba926581de39b6babfadcaf8ae489" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_aaa0ba926581de39b6babfadcaf8ae489_1aaa0ba926581de39b6babfadcaf8ae489" kindref="member">FAR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="structDW__UART__REG_a11e7b8d09badaf8e9f837ce1306f11e5_1a11e7b8d09badaf8e9f837ce1306f11e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a11e7b8d09badaf8e9f837ce1306f11e5_1a11e7b8d09badaf8e9f837ce1306f11e5" kindref="member">TFR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="structDW__UART__REG_a2d3ba1c4df295e4ed03fc0e8ed24919f_1a2d3ba1c4df295e4ed03fc0e8ed24919f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a2d3ba1c4df295e4ed03fc0e8ed24919f_1a2d3ba1c4df295e4ed03fc0e8ed24919f" kindref="member">RFW</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="structDW__UART__REG_a0927fb033fd8d27780e817eae6b2f1a3_1a0927fb033fd8d27780e817eae6b2f1a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a0927fb033fd8d27780e817eae6b2f1a3_1a0927fb033fd8d27780e817eae6b2f1a3" kindref="member">USR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="structDW__UART__REG_a018f42eb3bebb177241ec4aee2a34b66_1a018f42eb3bebb177241ec4aee2a34b66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a018f42eb3bebb177241ec4aee2a34b66_1a018f42eb3bebb177241ec4aee2a34b66" kindref="member">TFL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70" refid="structDW__UART__REG_a83fbd54ad5d1c527c1830886c0991c4b_1a83fbd54ad5d1c527c1830886c0991c4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a83fbd54ad5d1c527c1830886c0991c4b_1a83fbd54ad5d1c527c1830886c0991c4b" kindref="member">RFL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71" refid="structDW__UART__REG_a454987264b031f560df01f40121bdfe2_1a454987264b031f560df01f40121bdfe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a454987264b031f560df01f40121bdfe2_1a454987264b031f560df01f40121bdfe2" kindref="member">SRR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72" refid="structDW__UART__REG_a5ca80b1b24956dc98eb40c7dad7446c8_1a5ca80b1b24956dc98eb40c7dad7446c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a5ca80b1b24956dc98eb40c7dad7446c8_1a5ca80b1b24956dc98eb40c7dad7446c8" kindref="member">SRTS</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="structDW__UART__REG_a7e09f08df28a029f2e70d58b10e85cd0_1a7e09f08df28a029f2e70d58b10e85cd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a7e09f08df28a029f2e70d58b10e85cd0_1a7e09f08df28a029f2e70d58b10e85cd0" kindref="member">SBCR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="structDW__UART__REG_aa13f25876427bfc5255916b570dc13d9_1aa13f25876427bfc5255916b570dc13d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_aa13f25876427bfc5255916b570dc13d9_1aa13f25876427bfc5255916b570dc13d9" kindref="member">SDMAM</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="structDW__UART__REG_a19ad9d78198f07e1e5fdf484cce77b41_1a19ad9d78198f07e1e5fdf484cce77b41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a19ad9d78198f07e1e5fdf484cce77b41_1a19ad9d78198f07e1e5fdf484cce77b41" kindref="member">SFE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="structDW__UART__REG_a4829d3ef6bc30e8ed561d699dd26eea6_1a4829d3ef6bc30e8ed561d699dd26eea6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a4829d3ef6bc30e8ed561d699dd26eea6_1a4829d3ef6bc30e8ed561d699dd26eea6" kindref="member">SRT</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="structDW__UART__REG_a14403be22b34610ec9aa2518485519c6_1a14403be22b34610ec9aa2518485519c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a14403be22b34610ec9aa2518485519c6_1a14403be22b34610ec9aa2518485519c6" kindref="member">STET</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="structDW__UART__REG_a681b97d38c2d20bc9120c4d16aac0292_1a681b97d38c2d20bc9120c4d16aac0292" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a681b97d38c2d20bc9120c4d16aac0292_1a681b97d38c2d20bc9120c4d16aac0292" kindref="member">HTX</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="structDW__UART__REG_a46638002951a9bd6e2a5069065f6efa2_1a46638002951a9bd6e2a5069065f6efa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a46638002951a9bd6e2a5069065f6efa2_1a46638002951a9bd6e2a5069065f6efa2" kindref="member">DMASA</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80" refid="structDW__UART__REG_ab08b508d3f6016fb2acddaa75f6f37d2_1ab08b508d3f6016fb2acddaa75f6f37d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>RES2[18];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="structDW__UART__REG_a9fb6547c256c3206d3d343c09061ecd0_1a9fb6547c256c3206d3d343c09061ecd0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a9fb6547c256c3206d3d343c09061ecd0_1a9fb6547c256c3206d3d343c09061ecd0" kindref="member">CPR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="structDW__UART__REG_a01947a71462c54bb6a6bf31fe1f44c4a_1a01947a71462c54bb6a6bf31fe1f44c4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_a01947a71462c54bb6a6bf31fe1f44c4a_1a01947a71462c54bb6a6bf31fe1f44c4a" kindref="member">UCV</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="structDW__UART__REG_ae8a7663add3cd27899509a34466849a0_1ae8a7663add3cd27899509a34466849a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__REG_ae8a7663add3cd27899509a34466849a0_1ae8a7663add3cd27899509a34466849a0" kindref="member">CTR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/><ref refid="structDW__UART__REG" kindref="compound">DW_UART_REG</ref>,<sp/>*<ref refid="dw__uart_8h_a3451cd001079f304c65ace185e40c7fb_1a3451cd001079f304c65ace185e40c7fb" kindref="member">DW_UART_REG_PTR</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="dw__uart_8h_af4f51c07450de863acf90f5d6da19e76_1af4f51c07450de863acf90f5d6da19e76" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DW_UART_GINT_DISABLED<sp/><sp/><sp/>(0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="dw__uart_8h_ac7b6b350d796de899fa93483ca697695_1ac7b6b350d796de899fa93483ca697695" refkind="member"><highlight class="preprocessor">#define<sp/>DW_UART_GINT_ENABLE<sp/><sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="dw__uart_8h_ab16608b3249786f0e0c4282b66bbb64d_1ab16608b3249786f0e0c4282b66bbb64d" refkind="member"><highlight class="preprocessor">#define<sp/>DW_UART_TXINT_ENABLE<sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>1)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="dw__uart_8h_a1e495eaace4cbeb5a95407a074be5581_1a1e495eaace4cbeb5a95407a074be5581" refkind="member"><highlight class="preprocessor">#define<sp/>DW_UART_RXINT_ENABLE<sp/><sp/><sp/><sp/>(1<sp/>&lt;&lt;<sp/>2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91" refid="dw__uart_8h_a57c6c86833b7a3edd7309dc3563e639e_1a57c6c86833b7a3edd7309dc3563e639e" refkind="member"><highlight class="preprocessor">#define<sp/>DW_UART_INVALID_INTNO<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(DEV_INTNO_INVALID)</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="97" refid="structDW__UART__CTRL" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98" refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__CTRL_a7062e893f2319c940c5adce1fa0798e0_1a7062e893f2319c940c5adce1fa0798e0" kindref="member">dw_uart_regbase</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99" refid="structDW__UART__CTRL_ae4ac17d9ac926d9c9546e2216a1ec003_1ae4ac17d9ac926d9c9546e2216a1ec003" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__CTRL_ae4ac17d9ac926d9c9546e2216a1ec003_1ae4ac17d9ac926d9c9546e2216a1ec003" kindref="member">dw_apb_bus_freq</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="100" refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__CTRL_a78487b382e8fa9a4cdc4c6fbf50004c6_1a78487b382e8fa9a4cdc4c6fbf50004c6" kindref="member">intno</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101" refid="structDW__UART__CTRL_a5159f5d96367a574a08eaf094ff59960_1a5159f5d96367a574a08eaf094ff59960" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ARC__HAL__EXCEPTION__INTERRUPT_ga2f52c7816870bf537c7e1dd6acd6416c_1ga2f52c7816870bf537c7e1dd6acd6416c" kindref="member">INT_HANDLER_T</ref><sp/><ref refid="structDW__UART__CTRL_a5159f5d96367a574a08eaf094ff59960_1a5159f5d96367a574a08eaf094ff59960" kindref="member">dw_uart_int_handler</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102" refid="structDW__UART__CTRL_a7d62ad97196cb1fb028d919c3c9f3694_1a7d62ad97196cb1fb028d919c3c9f3694" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__CTRL_a7d62ad97196cb1fb028d919c3c9f3694_1a7d62ad97196cb1fb028d919c3c9f3694" kindref="member">tx_fifo_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="structDW__UART__CTRL_ade790f1d4bee20430d9549a7b397e425_1ade790f1d4bee20430d9549a7b397e425" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__CTRL_ade790f1d4bee20430d9549a7b397e425_1ade790f1d4bee20430d9549a7b397e425" kindref="member">rx_fifo_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="104" refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structDW__UART__CTRL_a29da6b4dceecf382b448d85883f5a8b3_1a29da6b4dceecf382b448d85883f5a8b3" kindref="member">int_status</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}<sp/><ref refid="structDW__UART__CTRL" kindref="compound">DW_UART_CTRL</ref>,<sp/>*<ref refid="dw__uart_8h_a878cd8d345d0497817b970c1e054ddf5_1a878cd8d345d0497817b970c1e054ddf5" kindref="member">DW_UART_CTRL_PTR</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="dw__uart_8h_a49c3f35887ad36260c0576c58614db71_1a49c3f35887ad36260c0576c58614db71" kindref="member">dw_uart_open</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/>uint32_t<sp/>baud);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="dw__uart_8h_a40287dfa053b6bc49bcaf66c35d73b1c_1a40287dfa053b6bc49bcaf66c35d73b1c" kindref="member">dw_uart_close</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="dw__uart_8h_aad6c59b900e3f9b72b1eac4ca889f317_1aad6c59b900e3f9b72b1eac4ca889f317" kindref="member">dw_uart_control</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/>uint32_t<sp/>ctrl_cmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="dw__uart_8h_a66f55a5d83c8d575ff0c2add94e6ec51_1a66f55a5d83c8d575ff0c2add94e6ec51" kindref="member">dw_uart_write</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>len);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="dw__uart_8h_a9f48bb55260aea46433c78bfd0935c69_1a9f48bb55260aea46433c78bfd0935c69" kindref="member">dw_uart_read</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>len);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8h_a931f15b8f8a5a29ab3a7344aa3cb10d2_1a931f15b8f8a5a29ab3a7344aa3cb10d2" kindref="member">dw_uart_isr</ref>(<ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>H_DW_UART<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/designware/dw_uart.h"/>
  </compounddef>
</doxygen>
