<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="embARC__syscalls_8c" kind="file">
    <compoundname>embARC_syscalls.c</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes refid="embARC__syscalls_8h" local="yes">clib/embARC_syscalls.h</includes>
    <includes refid="embARC__debug_8h" local="yes">embARC_debug.h</includes>
    <includes refid="embARC_8h" local="yes">embARC.h</includes>
    <incdepgraph>
      <node id="5442">
        <label>sys/stat.h</label>
      </node>
      <node id="5432">
        <label>/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c</label>
        <link refid="embARC_syscalls.c"/>
        <childnode refid="5433" relation="include">
        </childnode>
        <childnode refid="5434" relation="include">
        </childnode>
        <childnode refid="5435" relation="include">
        </childnode>
        <childnode refid="5436" relation="include">
        </childnode>
        <childnode refid="5437" relation="include">
        </childnode>
        <childnode refid="5438" relation="include">
        </childnode>
        <childnode refid="5439" relation="include">
        </childnode>
        <childnode refid="5440" relation="include">
        </childnode>
        <childnode refid="5441" relation="include">
        </childnode>
        <childnode refid="5442" relation="include">
        </childnode>
        <childnode refid="5443" relation="include">
        </childnode>
        <childnode refid="5444" relation="include">
        </childnode>
        <childnode refid="5445" relation="include">
        </childnode>
      </node>
      <node id="5443">
        <label>clib/embARC_syscalls.h</label>
        <link refid="embARC__syscalls_8h"/>
      </node>
      <node id="5450">
        <label>stdbool.h</label>
      </node>
      <node id="5434">
        <label>stdarg.h</label>
      </node>
      <node id="5446">
        <label>embARC_toolchain.h</label>
        <link refid="embARC__toolchain_8h"/>
        <childnode refid="5447" relation="include">
        </childnode>
        <childnode refid="5448" relation="include">
        </childnode>
        <childnode refid="5449" relation="include">
        </childnode>
        <childnode refid="5450" relation="include">
        </childnode>
      </node>
      <node id="5447">
        <label>stdint.h</label>
      </node>
      <node id="5436">
        <label>stdlib.h</label>
      </node>
      <node id="5451">
        <label>embARC_error.h</label>
        <link refid="embARC__error_8h"/>
        <childnode refid="5447" relation="include">
        </childnode>
        <childnode refid="5452" relation="include">
        </childnode>
      </node>
      <node id="5433">
        <label>errno.h</label>
      </node>
      <node id="5438">
        <label>fcntl.h</label>
      </node>
      <node id="5458">
        <label>board.h</label>
        <link refid="board_8h"/>
      </node>
      <node id="5449">
        <label>stddef.h</label>
      </node>
      <node id="5453">
        <label>arc/arc.h</label>
        <link refid="arc_8h"/>
        <childnode refid="5454" relation="include">
        </childnode>
      </node>
      <node id="5457">
        <label>arc/arc_mp.h</label>
        <link refid="arc__mp_8h"/>
        <childnode refid="5452" relation="include">
        </childnode>
      </node>
      <node id="5448">
        <label>limits.h</label>
      </node>
      <node id="5454">
        <label>arc/arc_feature_config.h</label>
        <link refid="arc__feature__config_8h"/>
      </node>
      <node id="5455">
        <label>arc/arc_timer.h</label>
        <link refid="arc__timer_8h"/>
        <childnode refid="5452" relation="include">
        </childnode>
      </node>
      <node id="5444">
        <label>embARC_debug.h</label>
        <link refid="embARC__debug_8h"/>
        <childnode refid="5435" relation="include">
        </childnode>
      </node>
      <node id="5437">
        <label>string.h</label>
      </node>
      <node id="5439">
        <label>time.h</label>
      </node>
      <node id="5441">
        <label>sys/time.h</label>
      </node>
      <node id="5456">
        <label>arc/arc_exception.h</label>
        <link refid="arc__exception_8h"/>
        <childnode refid="5452" relation="include">
        </childnode>
      </node>
      <node id="5440">
        <label>ctype.h</label>
      </node>
      <node id="5452">
        <label>arc/arc_builtin.h</label>
        <link refid="arc__builtin_8h"/>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5453" relation="include">
        </childnode>
      </node>
      <node id="5445">
        <label>embARC.h</label>
        <link refid="embARC_8h"/>
        <childnode refid="5446" relation="include">
        </childnode>
        <childnode refid="5451" relation="include">
        </childnode>
        <childnode refid="5452" relation="include">
        </childnode>
        <childnode refid="5455" relation="include">
        </childnode>
        <childnode refid="5456" relation="include">
        </childnode>
        <childnode refid="5457" relation="include">
        </childnode>
        <childnode refid="5458" relation="include">
        </childnode>
      </node>
      <node id="5435">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="embARC__syscalls_8c_ad894fa48bdb6402ac026de449da74ffd_1ad894fa48bdb6402ac026de449da74ffd" prot="public" static="no">
        <name>BOARD_CONSOLE_UART_ID</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="58" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="embARC__syscalls_8c_ab6a5428995eb87c161f554c44e6457ab_1ab6a5428995eb87c161f554c44e6457ab" prot="public" static="no">
        <name>BOARD_CONSOLE_UART_BAUD</name>
        <initializer><ref refid="group__DEVICE__HAL__UART__BAUD_ga7ba5033e1e1547d07d7683d0542c1f4a_1ga7ba5033e1e1547d07d7683d0542c1f4a" kindref="member">UART_BAUDRATE_115200</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="62" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="embARC__syscalls_8c_ad3058010e66f13a11489cbb0edf58daa_1ad3058010e66f13a11489cbb0edf58daa" prot="public" static="no">
        <name>EMBARC_CFG_STDIO_CRLF</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="66" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="embARC__syscalls_8c_a73c7f7024110d38d9e79fa88f9a286eb_1a73c7f7024110d38d9e79fa88f9a286eb" prot="public" static="no">
        <name>STDIO_FID_OFS</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="69" column="9" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="embARC__syscalls_8c_af132ef8183e782edfa3b5b10bd1ab27b_1af132ef8183e782edfa3b5b10bd1ab27b" prot="public" static="yes" mutable="no">
        <type>int32_t</type>
        <definition>int32_t stdio_uart_inited</definition>
        <argsstring></argsstring>
        <name>stdio_uart_inited</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="71" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="embARC__syscalls_8c_a2341e7986578085c8b588d438576f687_1a2341e7986578085c8b588d438576f687" prot="public" static="yes" mutable="no">
        <type><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref> *</type>
        <definition>DEV_UART* stdio_uart_obj</definition>
        <argsstring></argsstring>
        <name>stdio_uart_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="72" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="embARC__syscalls_8c_a75978bf842a4584e2bb953864c9232cb_1a75978bf842a4584e2bb953864c9232cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void init_stdio_serial</definition>
        <argsstring>(void)</argsstring>
        <name>init_stdio_serial</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the uart used for stdio. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="78" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="78" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="embARC__syscalls_8c_a5097f40c7bc06a84c1ec2b6e69b90fc5_1a5097f40c7bc06a84c1ec2b6e69b90fc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t stdio_read</definition>
        <argsstring>(char *buffer, uint32_t length)</argsstring>
        <name>stdio_read</name>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Read stdio. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>real Data&apos;s number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="100" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="100" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="embARC__syscalls_8c_a67e725b1118b93dad4e55a3d7a6342f4_1a67e725b1118b93dad4e55a3d7a6342f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void stdio_write_char</definition>
        <argsstring>(char data)</argsstring>
        <name>stdio_write_char</name>
        <param>
          <type>char</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Write char into stdio. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to write; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="120" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="120" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="embARC__syscalls_8c_abf2cdad5a9db89f63b3a08fc56d73be0_1abf2cdad5a9db89f63b3a08fc56d73be0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t stdio_write</definition>
        <argsstring>(const char *buffer, uint32_t length)</argsstring>
        <name>stdio_write</name>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Write data into stdio. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>Data length </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Written data number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="134" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="134" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="embARC__syscalls_8c_a34a4ce0f99071b9ba97fd2410170cbce_1a34a4ce0f99071b9ba97fd2410170cbce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t <ref refid="embARC__syscalls_8h_aa369f540cdae6ca5c311c544bf395709_1aa369f540cdae6ca5c311c544bf395709" kindref="member">SYSCALL_PREFIX</ref>()</type>
        <definition>int32_t SYSCALL_PREFIX() _read</definition>
        <argsstring>(int32_t handle, char *buffer, uint32_t length)</argsstring>
        <name>_read</name>
        <param>
          <type>int32_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>_read for C library </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="159" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="159" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="embARC__syscalls_8c_aa10904cfe095f7b24a26cbf1f6f0da32_1aa10904cfe095f7b24a26cbf1f6f0da32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t <ref refid="embARC__syscalls_8h_aa369f540cdae6ca5c311c544bf395709_1aa369f540cdae6ca5c311c544bf395709" kindref="member">SYSCALL_PREFIX</ref>()</type>
        <definition>int32_t SYSCALL_PREFIX() _write</definition>
        <argsstring>(int32_t handle, const char *buffer, uint32_t length)</argsstring>
        <name>_write</name>
        <param>
          <type>int32_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>_write for C library </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" line="171" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c" bodystart="171" bodyend="177"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>Synopsys,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>3)<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Synopsys,<sp/>Inc.,<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>---------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNU__</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/times.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embARC__syscalls_8h" kindref="compound">clib/embARC_syscalls.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embARC__debug_8h" kindref="compound">embARC_debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embARC_8h" kindref="compound">embARC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor">#ifndef<sp/>_HOSTLINK_<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>using<sp/>hostlink<sp/>library<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOARD_CONSOLE_UART_ID</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOARD_CONSOLE_UART_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BOARD_CONSOLE_UART_BAUD</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BOARD_CONSOLE_UART_BAUD<sp/><sp/><sp/><sp/><sp/>UART_BAUDRATE_115200</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EMBARC_CFG_STDIO_CRLF</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>EMBARC_CFG_STDIO_CRLF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STDIO_FID_OFS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="embARC__syscalls_8c_af132ef8183e782edfa3b5b10bd1ab27b_1af132ef8183e782edfa3b5b10bd1ab27b" kindref="member">stdio_uart_inited</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structDEV__UART" kindref="compound">DEV_UART</ref><sp/>*<ref refid="embARC__syscalls_8c_a2341e7986578085c8b588d438576f687_1a2341e7986578085c8b588d438576f687" kindref="member">stdio_uart_obj</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="embARC__syscalls_8c_a75978bf842a4584e2bb953864c9232cb_1a75978bf842a4584e2bb953864c9232cb" kindref="member">init_stdio_serial</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="embARC__syscalls_8c_af132ef8183e782edfa3b5b10bd1ab27b_1af132ef8183e782edfa3b5b10bd1ab27b" kindref="member">stdio_uart_inited</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embARC__syscalls_8c_af132ef8183e782edfa3b5b10bd1ab27b_1af132ef8183e782edfa3b5b10bd1ab27b" kindref="member">stdio_uart_inited</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>stdio_uart_obj<sp/>=<sp/><ref refid="group__DEVICE__HAL__UART_gade938afe2174b43b8522bf05cdcb1202_1gade938afe2174b43b8522bf05cdcb1202" kindref="member">uart_get_dev</ref>(<ref refid="embARC__syscalls_8c_ad894fa48bdb6402ac026de449da74ffd_1ad894fa48bdb6402ac026de449da74ffd" kindref="member">BOARD_CONSOLE_UART_ID</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stdio_uart_obj)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdio_uart_obj-&gt;<ref refid="group__DEVICE__HAL__UART__DEVSTRUCT_ga860ca9f9693e4f1552590565dc961869_1ga860ca9f9693e4f1552590565dc961869" kindref="member">uart_open</ref>(<ref refid="embARC__syscalls_8c_ab6a5428995eb87c161f554c44e6457ab_1ab6a5428995eb87c161f554c44e6457ab" kindref="member">BOARD_CONSOLE_UART_BAUD</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdio_uart_obj-&gt;<ref refid="group__DEVICE__HAL__UART__DEVSTRUCT_ga6b40883d5dfbfabd632ba125e128d1e5_1ga6b40883d5dfbfabd632ba125e128d1e5" kindref="member">uart_control</ref>(<ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga764fa9e43d0e6386328e6123469dfd05_1ga764fa9e43d0e6386328e6123469dfd05" kindref="member">UART_CMD_SET_BAUD</ref>,<sp/><ref refid="group__DEVICE__HAL__COMMON__DEFCMD_gaf3c5dc8db3ff175533e07d6a7c275520_1gaf3c5dc8db3ff175533e07d6a7c275520" kindref="member">CONV2VOID</ref>(<ref refid="embARC__syscalls_8c_ab6a5428995eb87c161f554c44e6457ab_1ab6a5428995eb87c161f554c44e6457ab" kindref="member">BOARD_CONSOLE_UART_BAUD</ref>));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__syscalls_8c_af132ef8183e782edfa3b5b10bd1ab27b_1af132ef8183e782edfa3b5b10bd1ab27b" kindref="member">stdio_uart_inited</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="embARC__syscalls_8c_a5097f40c7bc06a84c1ec2b6e69b90fc5_1a5097f40c7bc06a84c1ec2b6e69b90fc5" kindref="member">stdio_read</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stdio_uart_obj)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>avail_len;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>stdio_uart_obj-&gt;<ref refid="group__DEVICE__HAL__UART__DEVSTRUCT_ga6b40883d5dfbfabd632ba125e128d1e5_1ga6b40883d5dfbfabd632ba125e128d1e5" kindref="member">uart_control</ref>(<ref refid="group__DEVICE__HAL__UART__CTRLCMD_ga8d2dc24b2777c4ad6ac72350c2d6b6c4_1ga8d2dc24b2777c4ad6ac72350c2d6b6c4" kindref="member">UART_CMD_GET_RXAVAIL</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(&amp;avail_len));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/>(length<sp/>&lt;<sp/>avail_len)<sp/>?<sp/>length<sp/>:<sp/>avail_len;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stdio_uart_obj-&gt;<ref refid="group__DEVICE__HAL__UART__DEVSTRUCT_gad5a2572b8fb96539bf2b348436bdd1bf_1gad5a2572b8fb96539bf2b348436bdd1bf" kindref="member">uart_read</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)buffer,<sp/>(uint32_t)length);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="embARC__syscalls_8c_a67e725b1118b93dad4e55a3d7a6342f4_1a67e725b1118b93dad4e55a3d7a6342f4" kindref="member">stdio_write_char</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>stdio_uart_obj-&gt;<ref refid="group__DEVICE__HAL__UART__DEVSTRUCT_ga0104a456ec339fc30fe9d03070bbf4a7_1ga0104a456ec339fc30fe9d03070bbf4a7" kindref="member">uart_write</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(&amp;val),<sp/>1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="embARC__syscalls_8c_abf2cdad5a9db89f63b3a08fc56d73be0_1abf2cdad5a9db89f63b3a08fc56d73be0" kindref="member">stdio_write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/>uint32_t<sp/>length)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stdio_uart_obj)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>EMBARC_CFG_STDIO_CRLF</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__ARC__HAL__BUILTIN_gad077dba129e598bdc9a85a87cd0266b0_1gad077dba129e598bdc9a85a87cd0266b0" kindref="member">arc_compiler_rarely</ref>(buffer[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__syscalls_8c_a67e725b1118b93dad4e55a3d7a6342f4_1a67e725b1118b93dad4e55a3d7a6342f4" kindref="member">stdio_write_char</ref>(</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__syscalls_8c_a67e725b1118b93dad4e55a3d7a6342f4_1a67e725b1118b93dad4e55a3d7a6342f4" kindref="member">stdio_write_char</ref>(buffer[i]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stdio_uart_obj-&gt;<ref refid="group__DEVICE__HAL__UART__DEVSTRUCT_ga0104a456ec339fc30fe9d03070bbf4a7_1ga0104a456ec339fc30fe9d03070bbf4a7" kindref="member">uart_write</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)buffer,<sp/>(uint32_t)length);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">int32_t<sp/><ref refid="embARC__syscalls_8h_aa369f540cdae6ca5c311c544bf395709_1aa369f540cdae6ca5c311c544bf395709" kindref="member">SYSCALL_PREFIX</ref>(<ref refid="embARC__syscalls_8c_a34a4ce0f99071b9ba97fd2410170cbce_1a34a4ce0f99071b9ba97fd2410170cbce" kindref="member">_read</ref>)(int32_t<sp/>handle,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/>uint32_t<sp/>length){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle<sp/>&lt;<sp/><ref refid="embARC__syscalls_8c_a73c7f7024110d38d9e79fa88f9a286eb_1a73c7f7024110d38d9e79fa88f9a286eb" kindref="member">STDIO_FID_OFS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__syscalls_8c_a75978bf842a4584e2bb953864c9232cb_1a75978bf842a4584e2bb953864c9232cb" kindref="member">init_stdio_serial</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="embARC__syscalls_8c_a5097f40c7bc06a84c1ec2b6e69b90fc5_1a5097f40c7bc06a84c1ec2b6e69b90fc5" kindref="member">stdio_read</ref>(buffer,<sp/>length);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">int32_t<sp/><ref refid="embARC__syscalls_8h_aa369f540cdae6ca5c311c544bf395709_1aa369f540cdae6ca5c311c544bf395709" kindref="member">SYSCALL_PREFIX</ref>(<ref refid="embARC__syscalls_8c_aa10904cfe095f7b24a26cbf1f6f0da32_1aa10904cfe095f7b24a26cbf1f6f0da32" kindref="member">_write</ref>)(int32_t<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/>uint32_t<sp/>length){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle<sp/>&lt;<sp/><ref refid="embARC__syscalls_8c_a73c7f7024110d38d9e79fa88f9a286eb_1a73c7f7024110d38d9e79fa88f9a286eb" kindref="member">STDIO_FID_OFS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embARC__syscalls_8c_a75978bf842a4584e2bb953864c9232cb_1a75978bf842a4584e2bb953864c9232cb" kindref="member">init_stdio_serial</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="embARC__syscalls_8c_abf2cdad5a9db89f63b3a08fc56d73be0_1abf2cdad5a9db89f63b3a08fc56d73be0" kindref="member">stdio_write</ref>(buffer,<sp/>length);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__MW__</highlight></codeline>
<codeline lineno="180"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>weak<sp/>read<sp/>=<sp/>_read</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#pragma<sp/>weak<sp/>write<sp/>=<sp/>_write</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>!defined(_HOSTLINK_)<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/library/clib/embARC_syscalls.c"/>
  </compounddef>
</doxygen>
