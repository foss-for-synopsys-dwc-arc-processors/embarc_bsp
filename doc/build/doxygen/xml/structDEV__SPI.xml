<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="structDEV__SPI" kind="struct" prot="public">
    <compoundname>DEV_SPI</compoundname>
    <includes refid="dev__spi_8h" local="no">dev_spi.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structDEV__SPI_a2676f9bdf726511777a722f4e76b8a7d_1a2676f9bdf726511777a722f4e76b8a7d" prot="public" static="no" mutable="no">
        <type><ref refid="structDEV__SPI__INFO" kindref="compound">DEV_SPI_INFO</ref></type>
        <definition>DEV_SPI_INFO DEV_SPI::spi_info</definition>
        <argsstring></argsstring>
        <name>spi_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>spi device information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" line="536" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_ga76dc62e9fbc37c84f83744b6300ebd3c_1ga76dc62e9fbc37c84f83744b6300ebd3c" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t * DEV_SPI::spi_open</definition>
        <argsstring>)(uint32_t mode, uint32_t param)</argsstring>
        <name>spi_open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>open spi device in master/slave mode, \ when in master mode, param stands for frequency, \ when in slave mode, param stands for clock mode</para><para>Open an spi device with selected mode (master or slave) with defined param <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Working mode (<ref refid="group__DEVICE__HAL__COMMON__DEVMODE_ga9b1ad5abdf677288f655dd4bc9dc188d_1ga9b1ad5abdf677288f655dd4bc9dc188d" kindref="member">master</ref> or <ref refid="group__DEVICE__HAL__COMMON__DEVMODE_gaf070489d9f19e9000cb9700bb859a079_1gaf070489d9f19e9000cb9700bb859a079" kindref="member">slave</ref>) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">param</parametername>
</parameternamelist>
<parameterdescription>
<para>When mode is <ref refid="group__DEVICE__HAL__COMMON__DEVMODE_ga9b1ad5abdf677288f655dd4bc9dc188d_1ga9b1ad5abdf677288f655dd4bc9dc188d" kindref="member">DEV_MASTER_MODE</ref>, param stands for <ref refid="structDEV__SPI__INFO_a2f3f90d784b47772a64f0398c57060dd_1a2f3f90d784b47772a64f0398c57060dd" kindref="member">frequency</ref>, when mode is <ref refid="group__DEVICE__HAL__COMMON__DEVMODE_gaf070489d9f19e9000cb9700bb859a079_1gaf070489d9f19e9000cb9700bb859a079" kindref="member">DEV_SLAVE_MODE</ref>, param stands for <ref refid="structDEV__SPI__INFO_a92224b6c87b3b5157dcd364a913f4203_1a92224b6c87b3b5157dcd364a913f4203" kindref="member">slave clock mode</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>If device was opened before with different parameters, then just increase the <ref refid="structDEV__SPI__INFO_a3f0f622e26f4dd34691f258af663f804_1a3f0f622e26f4dd34691f258af663f804" kindref="member">opn_cnt</ref> and return <ref refid="group__EMBARC__ERROR_gaa5935765e74b9d1a7e72c9c8f9018b42_1gaa5935765e74b9d1a7e72c9c8f9018b42" kindref="member">E_OPNED</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is opened for different mode before, if you want to open it with different mode, you need to fully close it first. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Open settings are not supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" line="537" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_gac91ee54e8fc86263c118ad915cb82116_1gac91ee54e8fc86263c118ad915cb82116" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t * DEV_SPI::spi_close</definition>
        <argsstring>)(void)</argsstring>
        <name>spi_close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>close spi device</para><para>Close an spi device, just decrease the <ref refid="structDEV__SPI__INFO_a3f0f622e26f4dd34691f258af663f804_1a3f0f622e26f4dd34691f258af663f804" kindref="member">opn_cnt</ref>, if <ref refid="structDEV__SPI__INFO_a3f0f622e26f4dd34691f258af663f804_1a3f0f622e26f4dd34691f258af663f804" kindref="member">opn_cnt</ref> equals 0, then close the device <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Close successfully without any issues(including scenario that device is already closed) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still opened, the device <ref refid="structDEV__SPI__INFO_a3f0f622e26f4dd34691f258af663f804_1a3f0f622e26f4dd34691f258af663f804" kindref="member">opn_cnt</ref> decreased by 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" line="540" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" bodystart="540" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_ga827e9145bc57364eb611f19127706ac8_1ga827e9145bc57364eb611f19127706ac8" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t * DEV_SPI::spi_control</definition>
        <argsstring>)(uint32_t ctrl_cmd, void *param)</argsstring>
        <name>spi_control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>control spi device</para><para>Control an spi device by ctrl_cmd, with passed param. you can control spi device using predefined spi control commands defined using <ref refid="group__DEVICE__HAL__COMMON__DEFCMD_ga5560787ca52a8f1846d0aa7457ef45ee_1ga5560787ca52a8f1846d0aa7457ef45ee" kindref="member">DEV_SET_SYSCMD</ref> (which must be implemented by bsp developer), such as <ref refid="group__DEVICE__HAL__SPI__CTRLCMD_ga3800261c450f77f92c20cad49d64de72_1ga3800261c450f77f92c20cad49d64de72" kindref="member">set spi master frequency</ref>, <ref refid="group__DEVICE__HAL__SPI__CTRLCMD_ga57cc316e89c27c457006c438764b479e_1ga57cc316e89c27c457006c438764b479e" kindref="member">flush tx</ref> and <ref refid="group__DEVICE__HAL__SPI__CTRLCMD" kindref="compound">more</ref>. And you can also control spi device using your own specified commands defined using <ref refid="group__DEVICE__HAL__COMMON__DEFCMD_gafe70e244452c1c2f5235b85cadf602bb_1gafe70e244452c1c2f5235b85cadf602bb" kindref="member">DEV_SET_USRCMD</ref>, but these specified commands should be defined in your own spi device driver implementation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctrl_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="group__DEVICE__HAL__SPI__CTRLCMD" kindref="compound">control command</ref>, to change or get some thing related to spi </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">param</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameters that maybe argument of the command, or return values of the command, must not be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CLSED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is not opened </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to different reasons like in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Control command is not supported or not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" line="541" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" bodystart="541" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_ga5dddc1fc0a2e21f188611b6657c3e6b0_1ga5dddc1fc0a2e21f188611b6657c3e6b0" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t * DEV_SPI::spi_write</definition>
        <argsstring>)(const void *data, uint32_t len)</argsstring>
        <name>spi_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>send data to spi device (blocking method)</para><para>Send data through spi with defined len to slave device . <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data need to send by spi </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data to be sent </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0 Byte count that was successfully sent for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t write data to hardware due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" line="542" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group__DEVICE__HAL__SPI__DEVSTRUCT_ga7543acdd354a2569d1919f78cfaa89a5_1ga7543acdd354a2569d1919f78cfaa89a5" prot="public" static="no" mutable="no">
        <type>int32_t(*</type>
        <definition>int32_t * DEV_SPI::spi_read</definition>
        <argsstring>)(void *data, uint32_t len)</argsstring>
        <name>spi_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read data from spi device (blocking method)</para><para>receive data of defined len through spi from slave device . <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data need to received by spi </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data to be received </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>0 Byte count that was successfully received for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t receive data from hardware due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" line="543" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" bodystart="543" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure definitions for spi device. </para>    </briefdescription>
    <detaileddescription>
<para>Define spi device interface, like spi information structure, fuctions to get spi info, open/close/control spi, send/receive data by spi <simplesect kind="note"><para>All this details are implemented by user in user porting code </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="78">
        <label>dev_spi_transfer</label>
        <link refid="structdev__spi__transfer"/>
        <childnode refid="78" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="75">
        <label>DEV_SPI</label>
        <link refid="structDEV__SPI"/>
        <childnode refid="76" relation="usage">
          <edgelabel>spi_info</edgelabel>
        </childnode>
      </node>
      <node id="77">
        <label>DEV_SPI_CBS</label>
        <link refid="structDEV__SPI__CBS"/>
      </node>
      <node id="76">
        <label>DEV_SPI_INFO</label>
        <link refid="structDEV__SPI__INFO"/>
        <childnode refid="77" relation="usage">
          <edgelabel>spi_cbs</edgelabel>
        </childnode>
        <childnode refid="78" relation="usage">
          <edgelabel>xfer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" line="535" column="1" bodyfile="/home/travis/build/foss-for-synopsys-dwc-arc-processors/embarc_bsp/include/device/ip_hal/dev_spi.h" bodystart="535" bodyend="544"/>
    <listofallmembers>
      <member refid="group__DEVICE__HAL__SPI__DEVSTRUCT_gac91ee54e8fc86263c118ad915cb82116_1gac91ee54e8fc86263c118ad915cb82116" prot="public" virt="non-virtual"><scope>DEV_SPI</scope><name>spi_close</name></member>
      <member refid="group__DEVICE__HAL__SPI__DEVSTRUCT_ga827e9145bc57364eb611f19127706ac8_1ga827e9145bc57364eb611f19127706ac8" prot="public" virt="non-virtual"><scope>DEV_SPI</scope><name>spi_control</name></member>
      <member refid="structDEV__SPI_a2676f9bdf726511777a722f4e76b8a7d_1a2676f9bdf726511777a722f4e76b8a7d" prot="public" virt="non-virtual"><scope>DEV_SPI</scope><name>spi_info</name></member>
      <member refid="group__DEVICE__HAL__SPI__DEVSTRUCT_ga76dc62e9fbc37c84f83744b6300ebd3c_1ga76dc62e9fbc37c84f83744b6300ebd3c" prot="public" virt="non-virtual"><scope>DEV_SPI</scope><name>spi_open</name></member>
      <member refid="group__DEVICE__HAL__SPI__DEVSTRUCT_ga7543acdd354a2569d1919f78cfaa89a5_1ga7543acdd354a2569d1919f78cfaa89a5" prot="public" virt="non-virtual"><scope>DEV_SPI</scope><name>spi_read</name></member>
      <member refid="group__DEVICE__HAL__SPI__DEVSTRUCT_ga5dddc1fc0a2e21f188611b6657c3e6b0_1ga5dddc1fc0a2e21f188611b6657c3e6b0" prot="public" virt="non-virtual"><scope>DEV_SPI</scope><name>spi_write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
